<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>android套webview</title>
      <link href="2021/06/15/android%E5%A5%97webview/"/>
      <url>2021/06/15/android%E5%A5%97webview/</url>
      
        <content type="html"><![CDATA[<h2><span id="前言"><strong>前言</strong></span></h2><p>目前手机应用市场上的 APP 类型主要为以下两种：</p><ul><li>Native App（原生应用）：直接针对平台（Android、iOS 等手机系统）进行开发，属于性能最优的方案，也是开发成本最大的方案。</li><li>Hybrid App（混合应用）：即为原生 WebView 加 HTML5 网页内容的形式。只需要开发一套 HTML5 业务逻辑，就可以同时运行在不同的平台上，相对比较灵活，内容可以快速更新，开发维护成本较低。最大的缺点就是性能远不及原生应用，交互上也做不到原生的那么自然。</li></ul><blockquote><p>React Native 和 Weex 之类的框架不是本文讨论的主题，这里就不展开了。</p></blockquote><p>本文主要讲解如何制作一个安卓原生的“壳”来加载我们的 H5 网页，最终实现一个简单的 Hybrid App（套壳应用）。</p><blockquote><p>文中创建的示例项目已上传至码云，点击文章底部“阅读原文”即可获取</p></blockquote><h1><span id="正文"><strong>正文</strong></span></h1><blockquote><p>本文不涉及到复杂的 Android 与 Java 知识，小朋友不需要在家长的陪同下也能观看 ?</p></blockquote><h2><span id="1-创建安卓项目"><strong>1. 创建安卓项目</strong></span></h2><blockquote><p>创建安卓项目需要用到 Android Studio，关于如何安装 Android Studio 可以阅读官方文档。 安装 Android Studio：<a href="https://developer.android.com/studio/install">https://developer.android.com/studio/install</a></p></blockquote><h3><span id="11-创建新项目"><strong>1.1 创建新项目</strong></span></h3><p>首先打开 Android Studio，点击 <strong>「Start a new Android Studio Project（创建一个新的 AS 项目）」</strong>。</p><h3><span id="12-选择项目模板"><strong>1.2 选择项目模板</strong></span></h3><p>项目模板这里我们选择 <strong>「Empty Activity（空白活动）」</strong>，点击 <strong>「Next（下一步）」</strong>。</p><h3><span id="13-项目配置"><strong>1.3 项目配置</strong></span></h3><p>来到项目配置页面，分别设置好以下选项：</p><ul><li>Name：应用名</li><li>Package Name：包名</li><li>Save Location：项目保存路径</li><li>Language：项目使用的编程语言</li><li>Minimum SDK：最低兼容 SDK 版本</li></ul><p>这里语言选择 Java（因为我没写过 Kotlin ?），而最低 SDK 则选择了 API 23（示例用随便选的 ?），配置完成后点击 <strong>「Finished（完成）」</strong>。</p><p>至此我们已经完成了项目的创建，接下来让我们正式开始我们今天的主题。</p><h2><span id="2-开发套壳程序"><strong>2. 开发套壳程序</strong></span></h2><h3><span id="21-添加-webview-布局"><strong>2.1 添加 WebView 布局</strong></span></h3><p>修改 <strong>「app/res/layout/activity_main.xml」</strong> 文件，去掉原有的 <code>TextView</code> 标签，添加一个 <code>WebView</code> 标签并保存。</p><p>添加的代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 展示一个 WebView --&gt;</span><br><span class="line">&lt;WebView</span><br><span class="line">    android:id=<span class="string">&quot;@+id/webview&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><blockquote><p>在 Android 工程中，<strong>「app/res/layout/」</strong> 目录主要用于存放定义用户界面布局的 XML 文件。 上文提到的 activity_main.xml 即为应用主界面的布局文件。</p></blockquote><h3><span id="22-在入口处创建-webview-实例"><strong>2.2 在入口处创建 WebView 实例</strong></span></h3><p>选择 <strong>「app/java/{创建项目时指定的包名}/」</strong> 目录下的 <strong>「MainActivity.java」</strong> 文件（我这里是 app/java/example/webviewdemo/MainActivity.java）。</p><p>随后在 <strong>「MainActivity.java」</strong> 文件中添加一个 <code>createWebView</code> 函数（不要忘记导入用到的包），并在生命周期 <code>onCreate</code> 中调用该函数，来创建一个 WebView 实例并对其进行配置。</p><p>MainActivity.java 完整代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">package com.example.webviewdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebView;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebViewClient;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected <span class="keyword">void</span> <span class="function"><span class="title">onCreate</span>(<span class="params">Bundle savedInstanceState</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.createWebView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 创建 WebView 实例 */</span></span><br><span class="line">    @SuppressLint(<span class="string">&quot;SetJavaScriptEnabled&quot;</span>)</span><br><span class="line">    private <span class="keyword">void</span> <span class="function"><span class="title">createWebView</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建 WebView 实例并通过 id 绑定我们刚在布局中创建的 WebView 标签</span></span><br><span class="line">        <span class="comment">// 这里的 R.id.webview 就是 activity_main.xml 中的 WebView 标签的 id</span></span><br><span class="line">        final WebView webView = (WebView) findViewById(R.id.webview);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置 WebView 允许执行 JavaScript 脚本</span></span><br><span class="line">        webView.getSettings().setJavaScriptEnabled(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 确保跳转到另一个网页时仍然在当前 WebView 中显示</span></span><br><span class="line">        <span class="comment">// 而不是调用浏览器打开</span></span><br><span class="line">        webView.setWebViewClient(<span class="keyword">new</span> WebViewClient());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载指定网页</span></span><br><span class="line">        <span class="built_in">String</span> url = <span class="string">&quot;https://chenpipi.cn&quot;</span>;</span><br><span class="line">        webView.loadUrl(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在 Android 项目中，<strong>「app/java/」</strong> 目录主要用于存放项目的源代码。 在项目包名目录（文中项目包名为 <code>com.example.webviewdemo</code>）下的 MainActivity.java 文件为应用的主入口。</p></blockquote><h3><span id="23-添加联网权限"><strong>2.3 添加联网权限</strong></span></h3><p>选择 <strong>「app/minifests/AndroidMinifest.xml」</strong> 文件，在 <code>application</code> 标签前添加一个 <code>uses-permission</code> 标签来声明应用的网络访问权限，最后保存。</p><p>添加的代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 访问网络的权限 --&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><blockquote><p>AndroidManifest.xml 文件用于描述应用的基本特性并定义了每个应用组件。</p></blockquote><h3><span id="24-使用虚拟机运行应用"><strong>2.4 使用虚拟机运行应用</strong></span></h3><blockquote><p>我们开发的时候可以随时使用模拟器来预览我们的应用，也可以将手机连接到电脑上进行调试（这里就不展开了）。 如果想要打包成 APK 文件安装到手机上运行，执行顶部菜单栏的 [ Build -&gt; Build Bundle(s) / APK(s) -&gt; Build APK(s) ] 即可。</p></blockquote><p>调试工具栏在窗口右上方，选择或安装一个虚拟机（模拟器）。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-4348418/5vtzuiuy5p.png?imageView2/2/w/1620" alt="img"></p><p>点击绿色播放键（三角形），然后 Android Studio 会自动帮我们编译并在虚拟机 ? 中启动我们的应用。</p><p>随后可以看到我们的应用已经成功加载了 MainActivity.java 中设置好的链接 <code>https://chenpipi.cn</code>，计划通 ?。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-4348418/xr9ci9rby9.png?imageView2/2/w/1620" alt="img"></p><blockquote><p>如果没有安装虚拟机的话，需要点击窗口顶部菜单栏的 [ Tools -&gt; AVD Manager ] 进入 AVD 管理器安装安卓虚拟机（模拟器）。 AVD 管理器：<a href="https://developer.android.com/studio/run/managing-avds#createavd">https://developer.android.com/studio/run/managing-avds#createavd</a></p></blockquote><h2><span id="3-加点料"><strong>3. 加点料</strong></span></h2><h3><span id="31-隐藏标题栏"><strong>3.1 隐藏标题栏</strong></span></h3><p>修改 <strong>「app/res/values/styles.xml」</strong> 文件，将 <code>name</code> 为 <code>AppTheme</code> 的 <code>style</code> 标签的内容换成以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 隐藏标题栏 --&gt;</span><br><span class="line">&lt;item name=<span class="string">&quot;windowNoTitle&quot;</span>&gt;<span class="literal">true</span>&lt;/item&gt;</span><br><span class="line">&lt;item name=<span class="string">&quot;windowActionBar&quot;</span>&gt;<span class="literal">false</span>&lt;/item&gt;</span><br></pre></td></tr></table></figure><p>修改完成后，重新预览应用发现之前骚得不行紫色标题栏已经不见啦~（希望标题栏没事 ?）</p><h3><span id="32-隐藏状态栏"><strong>3.2 隐藏状态栏</strong></span></h3><blockquote><p>该方案在异形屏下会有些问题，且本文将不考虑异形屏的适配。</p></blockquote><p>光隐藏标题栏浏览体验还不够沉浸，得把状态栏也隐藏了，不能让用户看到时间和电量！?</p><p>修改 <strong>「MainActivity.java」</strong> 文件，在生命周期 <code>onCreate</code> 内调用 <code>setContentView</code> 函数<strong>「之前」</strong>添加以下两行代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置为全屏（隐藏状态栏）</span></span><br><span class="line">requestWindowFeature(Window.FEATURE_NO_TITLE);</span><br><span class="line">getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);</span><br></pre></td></tr></table></figure><p>再保存看看，duang~ 状态栏也消失啦！（也希望状态栏没事 ?）</p><h3><span id="33-接管返回键"><strong>3.3 接管返回键</strong></span></h3><p>默认情况下，在这个只有的 WebView 应用中无论在什么页面触发返回（按键或手势）都是会直接退出应用的，当然这肯定不是我们想要的效果。</p><p>一般来说在应用中触发返回操作应该是返回到上一个浏览的页面，没有上一个页面时才会退出应用。</p><p>我们可以通过以下两种方法来修改：</p><ol><li>修改 WebView 实例的按键监听器：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置 WebView 的按键监听器，覆写监听器的 onKey 函数，对返回键作特殊处理</span></span><br><span class="line"><span class="comment">// 当 WebView 可以返回到上一个页面时回到上一个页面</span></span><br><span class="line">webView.setOnKeyListener(<span class="keyword">new</span> View.OnKeyListener() &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public boolean <span class="function"><span class="title">onKey</span>(<span class="params">View v, int keyCode, KeyEvent event</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; webView.canGoBack()) &#123;</span><br><span class="line">            webView.goBack();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol><li>重写当前 Activity 的 <code>onBackPressed</code> 函数：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">private WebView webView = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 WebView 实例时保存到 this.webView 中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 接管返回键</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Override</span><br><span class="line">public <span class="keyword">void</span> <span class="function"><span class="title">onBackPressed</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.webView.canGoBack()) &#123;</span><br><span class="line">        <span class="built_in">this</span>.webView.goBack();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onBackPressed();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="34-支持明文传输http"><strong>3.4 支持明文传输（HTTP）</strong></span></h3><p>从 Android 9（API Level 28）开始<strong>「默认不支持明文传输」</strong>，在 WebView 中加载 HTTP 网页会报 <code>net::ERR_CLEARTEXT_NOT_PERMITTED</code> 的错误，不方便本地进行调试。</p><p>我们可以在 <strong>「AndroidMinifest.xml」</strong> 文件中的 <code>application</code> 标签内添加属性 <code>android:usesCleartextTraffic=&quot;true&quot;</code> 以支持明文传输。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;application</span><br><span class="line">    ...</span><br><span class="line">    android:usesCleartextTraffic=<span class="string">&quot;true&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>可以看到我本地的 Cocos Creator 项目已经成功在安卓的 WebView 上跑起来啦~ ?</p>]]></content>
      
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>影视解析接口</title>
      <link href="2021/06/14/%E5%BD%B1%E8%A7%86%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3/"/>
      <url>2021/06/14/%E5%BD%B1%E8%A7%86%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<p><strong>1.8090解析–无广告客户端解析，自己注册自己搭建，完全自主，可以自己做解析</strong> </p><p><strong>PS:（搭建后记得删除配置文件里的备用接口，默认的客户端备用接口带广告，删除即可）</strong></p><p>**●官网地址 ：<a href="https://www.8090.la/">https://www.8090.la</a><br>**</p><p><strong>●无广告解析接口：<a href="https://www.8090g.cn/?url=">https://www.8090g.cn/?url=</a></strong></p><p><strong>支持:腾讯.爱奇艺.优酷.乐视.土豆.芒果.搜狐.PPTV.m3u8.mp4直连.QQ空间.台湾爱奇异.咪咕.cctv.风行.华数.秒拍.音悦.梨视频.m1905.火山.等几十个视频网站的解</strong></p><p><strong>2.解析啦(jiexi.la)–无广告视频解析，您的最佳选择</strong></p><p><strong>●官网地址 ：<a href="http://www.jiexi.la/">http://www.jiexi.la</a>   (解析啦)</strong></p><p><strong>●无广告解析接口：<a href="https://api.jiexi.la/?url=">https://api.jiexi.la/?url=</a></strong></p><p><strong>支持:腾讯.爱奇艺.优酷.乐视.土豆.芒果.搜狐.PPTV.m3u8.mp4直连.QQ空间.台湾爱奇异.咪咕.cctv.风行.华数.秒拍.音悦.梨视频.m1905.火山.等几十个视频网站的解</strong></p><p><strong>3.playm3u8解析–老牌的解析服务商，已经4~5年了</strong></p><p><strong>●官网地址 ：<a href="https://www.playm3u8.cn/">https://www.playm3u8.cn</a></strong></p><p><strong>●无广告解析接口：<a href="https://www.playm3u8.cn/jiexi.php?url=">https://www.playm3u8.cn/jiexi.php?url=</a></strong></p><p>**支持:腾讯.爱奇艺.优酷.乐视.土豆.芒果.搜狐.PPTV.m3u8.mp4直连.QQ空间.台湾爱奇异.咪咕.cctv.风行.华数.秒拍.音悦.梨视频.m1905.火山.等几十个视频网站的解<br>**</p><p>**4.ckplayer解析<br>**</p><p><strong>●官网地址 ：<a href="https://www.ckplayer.vip/">https://www.ckplayer.vip</a></strong></p><p><strong>●无广告解析接口：<a href="https://www.ckplayer.vip/jiexi/?url=">https://www.ckplayer.vip/jiexi/?url=</a></strong></p><p><strong>支持:腾讯.爱奇艺.优酷.乐视.土豆.芒果.搜狐.PPTV.m3u8.mp4直连.QQ空间.台湾爱奇异.咪咕.cctv.风行.华数.秒拍.音悦.梨视频.m1905.火山.等几十个视频网站的解</strong></p><p><strong>5.盘古解析–老牌解析服务商</strong></p><p><strong>●官网地址 ：<a href="https://www.pangujiexi.cc/">https://www.pangujiexi.cc</a></strong></p><p><strong>●无广告解析接口：<a href="https://www.pangujiexi.cc/jiexi.php?url=">https://www.pangujiexi.cc/jiexi.php?url=</a></strong></p><p><strong>支持:腾讯.爱奇艺.优酷.乐视.土豆.芒果.搜狐.PPTV.m3u8.mp4直连.QQ空间.台湾爱奇异.咪咕.cctv.风行.华数.秒拍.音悦.梨视频.m1905.火山.等几十个视频网站的解</strong></p><p>**<br>**</p><p><strong>6.H8解析-</strong></p><p>**●官网地址 ：<a href="https://www.h8jx.com/">https://www.h8jx.com</a><br>**</p><p><strong>●无广告解析接口：<a href="https://www.h8jx.com/jiexi.php?url=">https://www.h8jx.com/jiexi.php?url=</a></strong></p><p><strong>支持:腾讯.爱奇艺.优酷.乐视.土豆.芒果.搜狐.PPTV.m3u8.mp4直连.QQ空间.台湾爱奇异.咪咕.cctv.风行.华数.秒拍.音悦.梨视频.m1905.火山.等几十个视频网站的解</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2021/06/13/init/"/>
      <url>2021/06/13/init/</url>
      
        <content type="html"><![CDATA[<h1><span id="方便打开">方便打开</span></h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>druid配置</title>
      <link href="2021/06/09/druid/druid%E9%85%8D%E7%BD%AE/"/>
      <url>2021/06/09/druid/druid%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment">#?serverTimezone=UTC解决时区的报错</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">    <span class="comment">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span></span><br><span class="line">    <span class="comment">#druid 数据源专有配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">    <span class="comment">#如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority</span></span><br><span class="line">    <span class="comment">#则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">       将自定义的 Druid数据源添加到容器中，不再让 Spring Boot 自动创建</span></span><br><span class="line"><span class="comment">       绑定全局配置文件中的 druid 数据源属性到 com.alibaba.druid.pool.DruidDataSource从而让它们生效</span></span><br><span class="line"><span class="comment">       @ConfigurationProperties(prefix = &quot;spring.datasource&quot;)：作用就是将 全局配置文件中</span></span><br><span class="line"><span class="comment">       前缀为 spring.datasource的属性值注入到 com.alibaba.druid.pool.DruidDataSource 的同名参数中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置 Druid 监控管理后台的Servlet；</span></span><br><span class="line"><span class="comment">//内置 Servlet 容器时没有web.xml文件，所以使用 Spring Boot 的注册 Servlet 方式</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">statViewServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ServletRegistrationBean bean = <span class="keyword">new</span> ServletRegistrationBean(<span class="keyword">new</span> StatViewServlet(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这些参数可以在 com.alibaba.druid.support.http.StatViewServlet </span></span><br><span class="line">    <span class="comment">// 的父类 com.alibaba.druid.support.http.ResourceServlet 中找到</span></span><br><span class="line">    Map&lt;String, String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    initParams.put(<span class="string">&quot;loginUsername&quot;</span>, <span class="string">&quot;root&quot;</span>); <span class="comment">//后台管理界面的登录账号</span></span><br><span class="line">    initParams.put(<span class="string">&quot;loginPassword&quot;</span>, <span class="string">&quot;admin&quot;</span>); <span class="comment">//后台管理界面的登录密码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台允许谁可以访问</span></span><br><span class="line">    <span class="comment">//initParams.put(&quot;allow&quot;, &quot;localhost&quot;)：表示只有本机可以访问</span></span><br><span class="line">    <span class="comment">//initParams.put(&quot;allow&quot;, &quot;&quot;)：为空或者为null时，表示允许所有访问</span></span><br><span class="line">    initParams.put(<span class="string">&quot;allow&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">//deny：Druid 后台拒绝谁访问</span></span><br><span class="line">    <span class="comment">//initParams.put(&quot;kuangshen&quot;, &quot;192.168.1.20&quot;);表示禁止此ip访问</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置初始化参数</span></span><br><span class="line">    bean.setInitParameters(initParams);</span><br><span class="line">    <span class="keyword">return</span> bean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置 Druid 监控 之  web 监控的 filter</span></span><br><span class="line"><span class="comment">//WebStatFilter：用于配置Web和Druid数据源之间的管理关联监控统计</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">webStatFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    FilterRegistrationBean bean = <span class="keyword">new</span> FilterRegistrationBean();</span><br><span class="line">    bean.setFilter(<span class="keyword">new</span> WebStatFilter());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//exclusions：设置哪些请求进行过滤排除掉，从而不进行统计</span></span><br><span class="line">    Map&lt;String, String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    initParams.put(<span class="string">&quot;exclusions&quot;</span>, <span class="string">&quot;*.js,*.css,/druid/*,/jdbc/*&quot;</span>);</span><br><span class="line">    bean.setInitParameters(initParams);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&quot;/*&quot; 表示过滤所有请求</span></span><br><span class="line">    bean.setUrlPatterns(Arrays.asList(<span class="string">&quot;/*&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> bean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> druid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署springboot项目</title>
      <link href="2021/06/09/springboot/%E9%83%A8%E7%BD%B2springboot%E9%A1%B9%E7%9B%AE/"/>
      <url>2021/06/09/springboot/%E9%83%A8%E7%BD%B2springboot%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar xxx.jar &gt; nohup.out 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep xxx.jar</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thymeleaf中链接的写法</title>
      <link href="2021/06/08/Thymeleaf/thymeleaf%E4%B8%AD%E9%93%BE%E6%8E%A5%E7%9A%84%E5%86%99%E6%B3%95/"/>
      <url>2021/06/08/Thymeleaf/thymeleaf%E4%B8%AD%E9%93%BE%E6%8E%A5%E7%9A%84%E5%86%99%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a th:href&#x3D;&quot;@&#123;&#x2F;delete(id&#x3D;$&#123;student.getId()&#125;)&#125;&quot;&gt;删除&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@RequestParam(&quot;id&quot;) int id</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis映射</title>
      <link href="2021/06/08/mybatis/mybatis%E6%98%A0%E5%B0%84/"/>
      <url>2021/06/08/mybatis/mybatis%E6%98%A0%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;!--namespace&#x3D;绑定一个对应的Dao&#x2F;Mapper接口--&gt;</span><br><span class="line">&lt;mapper namespace&#x3D;&quot;nuc.ss.mapper.UserMapper&quot;&gt;</span><br><span class="line">&lt;&#x2F;mapper&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:*&#x2F;mapper&#x2F;*.xml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity</title>
      <link href="2021/06/06/springSecurity/SpringSecurity/"/>
      <url>2021/06/06/springSecurity/SpringSecurity/</url>
      
        <content type="html"><![CDATA[<p>1.@EnableWebSecurity</p><p>2.继承WebSercurityConfigurAdapter</p><p>3.重写两个configuer(一个参数是http,两一个是auth)</p><ul><li>http.authorizeRequest.antMatchers(/index/**).hasRoles（vip)</li><li>http.formLogin()</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> springsecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫包</title>
      <link href="2021/06/05/%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB%E5%8C%85/"/>
      <url>2021/06/05/%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<ul><li>jsoup     //爬网页</li><li>tika        //爬音乐，爬视频</li><li>模拟 浏览器     //ajax请求</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pathvariable用法</title>
      <link href="2021/06/05/springboot/Pathvariable%E7%94%A8%E6%B3%95/"/>
      <url>2021/06/05/springboot/Pathvariable%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(/delte/&#123;id&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line"><span class="comment">//在这里直接用id即可</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何快速搭建web工程</title>
      <link href="2021/06/05/web/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAweb%E5%B7%A5%E7%A8%8B/"/>
      <url>2021/06/05/web/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAweb%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>1.有一套自己的后台模板</p><ul><li>x-admin</li></ul><p>2.通过前端框架能组出一套页面,得熟悉栅栏系统</p><ul><li><p>layui</p></li><li><p>bootstrap</p></li><li><p>semantic-ui</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> web工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于动态页面404错误处理</title>
      <link href="2021/06/05/springboot/%E5%85%B3%E4%BA%8E%E9%A1%B5%E9%9D%A2404/"/>
      <url>2021/06/05/springboot/%E5%85%B3%E4%BA%8E%E9%A1%B5%E9%9D%A2404/</url>
      
        <content type="html"><![CDATA[<ul><li>页面需要在Controller中注册，或者在WebMvnConfiguration中映射才能找到。</li><li><ul><li>需要数据处理注册controller，不需要直接映射就好</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RequestMapping中return的两种方式</title>
      <link href="2021/06/05/springboot/RequestMapping%E4%B8%ADreturn%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
      <url>2021/06/05/springboot/RequestMapping%E4%B8%ADreturn%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;redirect:/admin-index.html&quot;</span>;  <span class="comment">//跳转到该页面</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;       <span class="comment">//返回该页面的内容（url取决于请求地址）</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RequestParam</title>
      <link href="2021/06/05/springboot/RequestParam/"/>
      <url>2021/06/05/springboot/RequestParam/</url>
      
        <content type="html"><![CDATA[<p>1.如果在前端页面已经保证参数不为空</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestParam(&quot;username&quot;)</span> String username</span><br></pre></td></tr></table></figure><p>2.如果前端页面没有保证参数不为空</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestParam(request=false)</span> Strign username  <span class="comment">//request=false代表允许参数不为空</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot案例</title>
      <link href="2021/06/05/springboot/springboot%E6%A1%88%E4%BE%8B/"/>
      <url>2021/06/05/springboot/springboot%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2><span id="登录">登录</span></h2><p>1.将静态资源放入templates文件夹，将链接都转换为thymeleaf模式</p><p>2.关闭thymeleaf缓存<code>thymeleaf.cache=false</code></p><p>2.编写首页的controller</p><ul><li>在方法的参数里用@RequestParam接收表单数据，并且用Model传回一些数据</li></ul><p>3.修改静态资源的将数据显示出来</p><p>4.在config文件夹中创建MyMvcConfig类</p><ul><li>使用@configuration注解</li><li>实现webmvcConfigurer接口</li><li>重写addviewControllers方法</li></ul><p>5.在通过参数registry修改映射</p><h2><span id="过滤">过滤</span></h2><p>1.在controller中添加参数Httpsession</p><ul><li>创建userlog的session</li></ul><p>2.在config文件夹创建logHandlerInteraptor</p><ul><li>继承handlerinteraptor</li><li>重写prehandle方法(true是通行，false是拦截)</li></ul><p>3.通过request获取session</p><ul><li>为空就给request设置msg属性提示权限不足</li><li>非空就转发到主页</li></ul><p>4.在MyMvnConfig类中添加拦截器</p><ul><li>重写addInteraptorHandle方法</li><li>register添加过滤器</li><li>过滤器add和excute需要过滤的内容</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf 没有返回html只返回字符串</title>
      <link href="2021/06/04/Thymeleaf/Thymeleaf%20%E6%B2%A1%E6%9C%89%E8%BF%94%E5%9B%9Ehtml%E5%8F%AA%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>2021/06/04/Thymeleaf/Thymeleaf%20%E6%B2%A1%E6%9C%89%E8%BF%94%E5%9B%9Ehtml%E5%8F%AA%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<p>在使用Thymeleaf的时候，@RequestMapping对应的函数没有返回html文件而是返回了这个函数对应的字符串返回值</p><p>解决办法：</p><p>删除这个函数前面的@Responsebody注解，这个注解会返回Mapping函数指定的返回类型、例如String。而不是将其解析为html文件</p><p>===================================================================</p><p>错误：不能返回页面，只返回字符串。</p><p>原因：在controller中使用了注解@RestController</p><p>修改：修改注解为@Controller</p><p>分析：</p><p>RestController = Controller + ResponseBody.加上RestController,返回的内容是你return中的内容，如果是return “Hello World”，页面显示的就是Hello World。加上Controller，返回的是return中对应的页面,比如return “hello”,页面的名称是hello。</p>]]></content>
      
      
      
        <tags>
            
            <tag> thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pom配置打包时跳过测试</title>
      <link href="2021/06/04/springboot/pom%E9%85%8D%E7%BD%AE%E6%89%93%E5%8C%85%E6%97%B6%E8%B7%B3%E8%BF%87%E6%B5%8B%E8%AF%95/"/>
      <url>2021/06/04/springboot/pom%E9%85%8D%E7%BD%AE%E6%89%93%E5%8C%85%E6%97%B6%E8%B7%B3%E8%BF%87%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">    在工作中,很多情况下我们打包是不想执行测试用例的</span><br><span class="line">    可能是测试用例不完事,或是测试用例会影响数据库数据</span><br><span class="line">    跳过测试用例执</span><br><span class="line">--&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;maven-surefire-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">        &lt;!--跳过项目运行测试用例--&gt;</span><br><span class="line">        &lt;skipTests&gt;true&lt;&#x2F;skipTests&gt;</span><br><span class="line">    &lt;&#x2F;configuration&gt;</span><br><span class="line">&lt;&#x2F;plugin&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven的标准setting.xml</title>
      <link href="2021/06/04/maven/maven%E7%9A%84%E6%A0%87%E5%87%86setting-xml/"/>
      <url>2021/06/04/maven/maven%E7%9A%84%E6%A0%87%E5%87%86setting-xml/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;settings xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;SETTINGS&#x2F;1.0.0&quot; </span><br><span class="line">    xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot; xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;SETTINGS&#x2F;1.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;settings-1.0.0.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 本地仓库的位置 --&gt;</span><br><span class="line">    &lt;localRepository&gt;$&#123;user.home&#125;&#x2F;.m2&#x2F;repository&lt;&#x2F;localRepository&gt;</span><br><span class="line">  </span><br><span class="line">    &lt;!-- Apache Maven 配置 --&gt;</span><br><span class="line">    &lt;pluginGroups&#x2F;&gt;</span><br><span class="line">    &lt;proxies&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 私服发布的用户名密码 --&gt;</span><br><span class="line">    &lt;servers&gt;</span><br><span class="line">        &lt;server&gt;</span><br><span class="line">            &lt;id&gt;releases&lt;&#x2F;id&gt;</span><br><span class="line">            &lt;username&gt;deployment&lt;&#x2F;username&gt;</span><br><span class="line">            &lt;password&gt;He2019&lt;&#x2F;password&gt;</span><br><span class="line">        &lt;&#x2F;server&gt;</span><br><span class="line">        &lt;server&gt;</span><br><span class="line">            &lt;id&gt;snapshots&lt;&#x2F;id&gt;</span><br><span class="line">            &lt;username&gt;deployment&lt;&#x2F;username&gt;</span><br><span class="line">            &lt;password&gt;He2019&lt;&#x2F;password&gt;</span><br><span class="line">        &lt;&#x2F;server&gt;</span><br><span class="line">    &lt;&#x2F;servers&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 阿里云镜像 --&gt;</span><br><span class="line">    &lt;mirrors&gt;</span><br><span class="line">        &lt;mirror&gt;</span><br><span class="line">            &lt;id&gt;alimaven&lt;&#x2F;id&gt;</span><br><span class="line">            &lt;name&gt;aliyun maven&lt;&#x2F;name&gt;</span><br><span class="line">            &lt;!-- https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&#x2F; --&gt;</span><br><span class="line">            &lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;</span><br><span class="line">            &lt;mirrorOf&gt;central&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">        &lt;&#x2F;mirror&gt;</span><br><span class="line">    &lt;&#x2F;mirrors&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置: java8, 先从阿里云下载, 没有再去私服下载  --&gt;</span><br><span class="line">    &lt;!-- 20190929 hepengju 测试结果: 影响下载顺序的是profiles标签的配置顺序(后面配置的ali仓库先下载), 而不是activeProfiles的顺序 --&gt;</span><br><span class="line">    &lt;profiles&gt;</span><br><span class="line">        &lt;!-- 全局JDK1.8配置 --&gt;</span><br><span class="line">        &lt;profile&gt;</span><br><span class="line">            &lt;id&gt;jdk1.8&lt;&#x2F;id&gt;</span><br><span class="line">            &lt;activation&gt;</span><br><span class="line">                &lt;activeByDefault&gt;true&lt;&#x2F;activeByDefault&gt;</span><br><span class="line">                &lt;jdk&gt;1.8&lt;&#x2F;jdk&gt;</span><br><span class="line">            &lt;&#x2F;activation&gt;</span><br><span class="line">            &lt;properties&gt;</span><br><span class="line">                &lt;project.build.sourceEncoding&gt;UTF-8&lt;&#x2F;project.build.sourceEncoding&gt;</span><br><span class="line">                &lt;maven.compiler.source&gt;1.8&lt;&#x2F;maven.compiler.source&gt;</span><br><span class="line">                &lt;maven.compiler.target&gt;1.8&lt;&#x2F;maven.compiler.target&gt;</span><br><span class="line">                &lt;maven.compiler.compilerVersion&gt;1.8&lt;&#x2F;maven.compiler.compilerVersion&gt;</span><br><span class="line">            &lt;&#x2F;properties&gt;</span><br><span class="line">        &lt;&#x2F;profile&gt;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        &lt;!-- Nexus私服配置: 第三方jar包下载, 比如oracle的jdbc驱动等 --&gt;</span><br><span class="line">        &lt;profile&gt;</span><br><span class="line">            &lt;id&gt;dev&lt;&#x2F;id&gt;</span><br><span class="line">            &lt;repositories&gt;</span><br><span class="line">                &lt;repository&gt;</span><br><span class="line">                    &lt;id&gt;nexus&lt;&#x2F;id&gt;</span><br><span class="line">                    &lt;url&gt;http:&#x2F;&#x2F;nexus.hepengju.cn:8081&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;</span><br><span class="line">                    &lt;releases&gt;</span><br><span class="line">                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;</span><br><span class="line">                    &lt;&#x2F;releases&gt;</span><br><span class="line">                    &lt;snapshots&gt;</span><br><span class="line">                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;</span><br><span class="line">                    &lt;&#x2F;snapshots&gt;</span><br><span class="line">                &lt;&#x2F;repository&gt;</span><br><span class="line">            &lt;&#x2F;repositories&gt;</span><br><span class="line">            &lt;pluginRepositories&gt;</span><br><span class="line">                &lt;pluginRepository&gt;</span><br><span class="line">                    &lt;id&gt;public&lt;&#x2F;id&gt;</span><br><span class="line">                    &lt;name&gt;Public Repositories&lt;&#x2F;name&gt;</span><br><span class="line">                    &lt;url&gt;http:&#x2F;&#x2F;nexus.hepengju.cn:8081&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;</span><br><span class="line">                &lt;&#x2F;pluginRepository&gt;</span><br><span class="line">            &lt;&#x2F;pluginRepositories&gt;</span><br><span class="line">        &lt;&#x2F;profile&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!-- 阿里云配置: 提高国内的jar包下载速度 --&gt;</span><br><span class="line">        &lt;profile&gt;</span><br><span class="line">            &lt;id&gt;ali&lt;&#x2F;id&gt;</span><br><span class="line">            &lt;repositories&gt;</span><br><span class="line">                &lt;repository&gt;</span><br><span class="line">                    &lt;id&gt;alimaven&lt;&#x2F;id&gt;</span><br><span class="line">                    &lt;name&gt;aliyun maven&lt;&#x2F;name&gt;</span><br><span class="line">                    &lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;</span><br><span class="line">                    &lt;releases&gt;</span><br><span class="line">                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;</span><br><span class="line">                    &lt;&#x2F;releases&gt;</span><br><span class="line">                    &lt;snapshots&gt;</span><br><span class="line">                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;</span><br><span class="line">                    &lt;&#x2F;snapshots&gt;</span><br><span class="line">                &lt;&#x2F;repository&gt;</span><br><span class="line">            &lt;&#x2F;repositories&gt;</span><br><span class="line">            &lt;pluginRepositories&gt;</span><br><span class="line">                &lt;pluginRepository&gt;</span><br><span class="line">                    &lt;id&gt;alimaven&lt;&#x2F;id&gt;</span><br><span class="line">                    &lt;name&gt;aliyun maven&lt;&#x2F;name&gt;</span><br><span class="line">                    &lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;</span><br><span class="line">                &lt;&#x2F;pluginRepository&gt;</span><br><span class="line">            &lt;&#x2F;pluginRepositories&gt;</span><br><span class="line">        &lt;&#x2F;profile&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;profiles&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 激活配置 --&gt; </span><br><span class="line">    &lt;activeProfiles&gt;</span><br><span class="line">        &lt;activeProfile&gt;jdk1.8&lt;&#x2F;activeProfile&gt;</span><br><span class="line">        &lt;activeProfile&gt;dev&lt;&#x2F;activeProfile&gt;</span><br><span class="line">        &lt;activeProfile&gt;ali&lt;&#x2F;activeProfile&gt;</span><br><span class="line">    &lt;&#x2F;activeProfiles&gt;</span><br><span class="line">&lt;&#x2F;settings&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>androidUI圆角背景</title>
      <link href="2021/06/03/androidui/androidUI%E5%9C%86%E8%A7%92%E8%83%8C%E6%99%AF/"/>
      <url>2021/06/03/androidui/androidUI%E5%9C%86%E8%A7%92%E8%83%8C%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;layer-list</span><br><span class="line">    xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;&gt;</span><br><span class="line">    &lt;item&gt;</span><br><span class="line">        &lt;shape</span><br><span class="line">            xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;</span><br><span class="line">            android:shape&#x3D;&quot;rectangle&quot;&gt;</span><br><span class="line">            &lt;solid</span><br><span class="line">                android:color&#x3D;&quot;#ffffff&quot;&#x2F;&gt;</span><br><span class="line">            &lt;corners</span><br><span class="line">                android:radius&#x3D;&quot;20dip&quot;</span><br><span class="line">                &#x2F;&gt;</span><br><span class="line">            &lt;stroke</span><br><span class="line">                android:width&#x3D;&quot;2px&quot;</span><br><span class="line">                &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;shape&gt;</span><br><span class="line">    &lt;&#x2F;item&gt;</span><br><span class="line">&lt;&#x2F;layer-list&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> androidui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后端配置跨域</title>
      <link href="2021/06/03/%E5%90%8E%E7%AB%AF%E6%95%B0%E6%8D%AE%E8%BE%93%E5%87%BA/%E5%90%8E%E7%AB%AF%E9%85%8D%E7%BD%AE%E8%B7%A8%E5%9F%9F/"/>
      <url>2021/06/03/%E5%90%8E%E7%AB%AF%E6%95%B0%E6%8D%AE%E8%BE%93%E5%87%BA/%E5%90%8E%E7%AB%AF%E9%85%8D%E7%BD%AE%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String originHeads &#x3D; request.getHeader(&quot;Origin&quot;);</span><br><span class="line">     response.setHeader(&quot;Access-Control-Allow-Origin&quot;,&quot;*&quot;);</span><br><span class="line">     response.setHeader(&quot;Access-Control-Allow-Origin&quot;, originHeads);</span><br><span class="line">         response.setHeader(&quot;Access-Control-Allow-Methods&quot;, &quot;POST,GET,OPTIONS,DELETE,HEAD,PUT,PATCH&quot;);</span><br><span class="line">         response.setHeader(&quot;Access-Control-Max-Age&quot;, &quot;36000&quot;);</span><br><span class="line">         response.setHeader(&quot;Access-Control-Allow-Headers&quot;, &quot;Origin, X-Requested-With, Content-Type, Accept,Authorization,authorization&quot;);</span><br><span class="line">         response.setHeader(&quot;Access-Control-Allow-Credentials&quot;,&quot;true&quot;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 后端数据输出 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接口</title>
      <link href="2021/06/03/api/%E6%8E%A5%E5%8F%A3/"/>
      <url>2021/06/03/api/%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<p>天气预报</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;t.weather.itboy.net&#x2F;api&#x2F;weather&#x2F;city&#x2F;101280101</span><br></pre></td></tr></table></figure><p>有道翻译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;fanyi.youdao.com&#x2F;translate?&amp;doctype&#x3D;json&amp;type&#x3D;AUTO&amp;i&#x3D;计算</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取网络json数据</title>
      <link href="2021/06/03/%E5%90%8E%E7%AB%AF%E6%95%B0%E6%8D%AE%E6%8E%A5%E6%94%B6/%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9Cjson%E6%95%B0%E6%8D%AE/"/>
      <url>2021/06/03/%E5%90%8E%E7%AB%AF%E6%95%B0%E6%8D%AE%E6%8E%A5%E6%94%B6/%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9Cjson%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">private final String TAG &#x3D; &quot;MSG&quot;;</span><br><span class="line">Handler handler&#x3D;new Handler();</span><br><span class="line">public void setMessageUrl(String myurl,int flag) &#123;</span><br><span class="line">    Thread thread &#x3D; new Thread(new Runnable() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public void run() &#123;</span><br><span class="line">            String result;</span><br><span class="line">            try &#123;</span><br><span class="line">                URL url &#x3D; new URL(myurl);</span><br><span class="line">                HttpURLConnection connection &#x3D; (HttpURLConnection) url.openConnection();</span><br><span class="line">                connection.setRequestMethod(&quot;GET&quot;);</span><br><span class="line">                int code &#x3D; connection.getResponseCode();</span><br><span class="line">                if (code &#x3D;&#x3D; 200) &#123;</span><br><span class="line">                    InputStream inputStream &#x3D; connection.getInputStream();</span><br><span class="line">                    ByteArrayOutputStream bos &#x3D; new ByteArrayOutputStream();</span><br><span class="line">                    int len &#x3D; -1;</span><br><span class="line">                    byte[] bytes &#x3D; new byte[1024];</span><br><span class="line">                    while ((len &#x3D; inputStream.read(bytes)) !&#x3D; -1) &#123;</span><br><span class="line">                        bos.write(bytes, 0, len);</span><br><span class="line">                    &#125;</span><br><span class="line">                    result &#x3D; new String(bos.toByteArray(), &quot;utf-8&quot;);</span><br><span class="line">                    Message msg&#x3D;new Message();</span><br><span class="line">                    Bundle bd&#x3D;new Bundle();</span><br><span class="line">                    bd.putString(&quot;result&quot;,result);</span><br><span class="line">                    msg.setData(bd);</span><br><span class="line">                    msg.what&#x3D;flag;</span><br><span class="line">                    handler.sendMessage(msg);</span><br><span class="line">                    Log.i(TAG, &quot;run: &quot;+result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    thread.start();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public RootName getRoot(Message handlermsg)&#123;</span><br><span class="line">     String massage&#x3D;handlermsg.getData().getString(&quot;result&quot;);</span><br><span class="line">     Gson gson&#x3D;new Gson();</span><br><span class="line">     RootName rootName&#x3D;gson.fromJson(massage,RootName.class);</span><br><span class="line">     return rootName;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &#39;com.google.code.gson:gson:2.8.5&#39;</span><br></pre></td></tr></table></figure><p>HttpConnection连接api，获取输入流。先用inputStream输入流读入数据，再用ByteArrayOutputStream将数据读出。将读出的字节数组编程字符串使用</p>]]></content>
      
      
      
        <tags>
            
            <tag> 后端数据接收 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>indexDB</title>
      <link href="2021/06/03/%E5%89%8D%E7%AB%AF%E6%95%B0%E6%8D%AE%E5%82%A8%E5%AD%98/indexDB/"/>
      <url>2021/06/03/%E5%89%8D%E7%AB%AF%E6%95%B0%E6%8D%AE%E5%82%A8%E5%AD%98/indexDB/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">     <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">         openDB(myDB.name, myDB.version);</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">var</span> myDB = &#123;</span><br><span class="line">         name: <span class="string">&#x27;myList&#x27;</span>,</span><br><span class="line">         version: <span class="number">1</span>,</span><br><span class="line">         db: <span class="literal">null</span></span><br><span class="line">     &#125;;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">var</span> school = [&#123;</span><br><span class="line">         id: <span class="number">1001</span>,</span><br><span class="line">         name: <span class="string">&quot;北京大学&quot;</span>,</span><br><span class="line">         addr: <span class="string">&quot;北京&quot;</span></span><br><span class="line">     &#125;, &#123;</span><br><span class="line">         id: <span class="number">1002</span>,</span><br><span class="line">         name: <span class="string">&quot;清华大学&quot;</span>,</span><br><span class="line">         addr: <span class="string">&quot;北京&quot;</span></span><br><span class="line">     &#125;, &#123;</span><br><span class="line">         id: <span class="number">1003</span>,</span><br><span class="line">         name: <span class="string">&quot;上海交通大学&quot;</span>,</span><br><span class="line">         addr: <span class="string">&quot;上海&quot;</span></span><br><span class="line">     &#125;];</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">openDB</span>(<span class="params">name, version</span>) </span>&#123;</span><br><span class="line">         <span class="keyword">var</span> version = version || <span class="number">1</span>;</span><br><span class="line">         <span class="keyword">var</span> request = <span class="built_in">window</span>.indexedDB.open(name, version);</span><br><span class="line">         request.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">             <span class="built_in">console</span>.log(e.currentTarget.error.message);</span><br><span class="line">         &#125;;</span><br><span class="line">         request.onsuccess = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">             myDB.db = e.target.result;</span><br><span class="line">             addData(myDB.db, <span class="string">&quot;school&quot;</span>);</span><br><span class="line">             fetchStoreByCursor(myDB.db, <span class="string">&quot;school&quot;</span>);</span><br><span class="line">         &#125;;</span><br><span class="line">         request.onupgradeneeded = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">             <span class="keyword">var</span> db = e.target.result;</span><br><span class="line">             <span class="keyword">if</span> (!db.objectStoreNames.contains(<span class="string">&#x27;school&#x27;</span>)) &#123;</span><br><span class="line">                 <span class="keyword">var</span> store = db.createObjectStore(<span class="string">&#x27;school&#x27;</span>, &#123;</span><br><span class="line">                     keyPath: <span class="string">&#x27;id&#x27;</span></span><br><span class="line">                 &#125;);</span><br><span class="line">                 store.createIndex(<span class="string">&#x27;nameIndex&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, &#123;</span><br><span class="line">                     unique: <span class="literal">true</span></span><br><span class="line">                 &#125;);</span><br><span class="line">                 store.createIndex(<span class="string">&#x27;addrIndex&#x27;</span>, <span class="string">&#x27;addr&#x27;</span>, &#123;</span><br><span class="line">                     unique: <span class="literal">false</span></span><br><span class="line">                 &#125;);</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="string">&#x27;DB version changed to &#x27;</span> + version);</span><br><span class="line">         &#125;;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">addData</span>(<span class="params">db, storeName</span>) </span>&#123;</span><br><span class="line">         <span class="keyword">var</span> trans = db.transaction([storeName], <span class="string">&#x27;readwrite&#x27;</span>);</span><br><span class="line">         <span class="keyword">var</span> store = trans.objectStore(storeName);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; school.length; i++) &#123;</span><br><span class="line">             store.add(school[i]);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">fetchStoreByCursor</span>(<span class="params">db, storeName</span>) </span>&#123;</span><br><span class="line">         <span class="keyword">var</span> transaction = db.transaction(storeName);</span><br><span class="line">         <span class="keyword">var</span> store = transaction.objectStore(storeName);</span><br><span class="line">         <span class="keyword">var</span> request = store.openCursor();</span><br><span class="line">         request.onsuccess = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">             <span class="keyword">var</span> cursor = e.target.result;</span><br><span class="line">             <span class="keyword">if</span> (cursor) &#123;</span><br><span class="line">                 <span class="built_in">console</span>.log(cursor.key);</span><br><span class="line">                 <span class="keyword">var</span> currentStudent = cursor.value;</span><br><span class="line">                 <span class="built_in">console</span>.log(currentStudent.name);</span><br><span class="line">                 <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementById(<span class="string">&quot;mytable&quot;</span>);</span><br><span class="line">                 <span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line">                 <span class="keyword">var</span> imgtd = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">                 <span class="keyword">var</span> txttd = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">                 <span class="comment">//图片</span></span><br><span class="line">                 <span class="keyword">var</span> schimg = <span class="built_in">document</span>.createElement(<span class="string">&quot;img&quot;</span>);</span><br><span class="line">                 <span class="keyword">switch</span> (currentStudent.name) &#123;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">&quot;北京大学&quot;</span>:</span><br><span class="line">                         schimg.setAttribute(<span class="string">&quot;src&quot;</span>, <span class="string">&quot;bj-playstore.png&quot;</span>);</span><br><span class="line">                         <span class="keyword">break</span>;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">&quot;清华大学&quot;</span>:</span><br><span class="line">                         schimg.setAttribute(<span class="string">&quot;src&quot;</span>, <span class="string">&quot;qh-playstore.png&quot;</span>);</span><br><span class="line">                         <span class="keyword">break</span>;</span><br><span class="line">                     <span class="keyword">case</span> <span class="string">&quot;上海交通大学&quot;</span>:</span><br><span class="line">                         schimg.setAttribute(<span class="string">&quot;src&quot;</span>, <span class="string">&quot;shj-playstore.png&quot;</span>);</span><br><span class="line">                         <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                 &#125;</span><br><span class="line">                 schimg.setAttribute(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;height: 100px;&quot;</span>);</span><br><span class="line">                 imgtd.appendChild(schimg);</span><br><span class="line"></span><br><span class="line">                 <span class="comment">//文字</span></span><br><span class="line">                 txttd.innerHTML = <span class="string">&quot; &lt;p style=&#x27;font-size: 45px;&#x27;&gt;&quot;</span> + currentStudent.name + <span class="string">&quot;&lt;/p&gt;&quot;</span> + <span class="string">&quot;&lt;p&gt;&quot;</span> + currentStudent.addr + <span class="string">&quot;&lt;p&gt;&quot;</span>;</span><br><span class="line">                 <span class="comment">//添加</span></span><br><span class="line">                 tr.appendChild(imgtd);</span><br><span class="line">                 tr.appendChild(txttd);</span><br><span class="line">                 table.appendChild(tr);</span><br><span class="line">                 cursor.continue();</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;;</span><br><span class="line">     &#125;</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 前端数据储存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bootstrap引入</title>
      <link href="2021/06/03/boogstrap/bootstrap%E5%BC%95%E5%85%A5/"/>
      <url>2021/06/03/boogstrap/bootstrap%E5%BC%95%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;twitter-bootstrap&#x2F;4.3.1&#x2F;css&#x2F;bootstrap.min.css&quot;&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;jquery&#x2F;3.2.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;popper.js&#x2F;1.15.0&#x2F;umd&#x2F;popper.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;twitter-bootstrap&#x2F;4.3.1&#x2F;js&#x2F;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim批量替换命令实践</title>
      <link href="2021/06/03/vim/vim%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4%E5%AE%9E%E8%B7%B5/"/>
      <url>2021/06/03/vim/vim%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<h2><span id="vim批量替换命令实践">vim批量替换命令实践</span></h2><p>语法为 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:[addr]s&#x2F;源字符串&#x2F;目的字符串&#x2F;[option]</span><br></pre></td></tr></table></figure><p>全局替换命令为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s&#x2F;源字符串&#x2F;目的字符串&#x2F;g</span><br></pre></td></tr></table></figure><p><strong>[addr] 表示检索范围，省略时表示当前行。</strong></p><p>“1,20” ：表示从第1行到20行；</p><p>“%” ：表示整个文件，同“1,$”；</p><p>“. ,$” ：从当前行到文件尾；</p><p><strong>s : 表示替换操作</strong></p><p><strong>[option] : 表示操作类型</strong></p><p>g 表示全局替换; </p><p>c 表示进行确认</p><p>p 表示替代结果逐行显示（Ctrl + L恢复屏幕）;</p><p>省略option时仅对每行第一个匹配串进行替换;</p><p>如果在源字符串和目的字符串中出现特殊字符，需要用”\”转义 如 \t</p>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下安装vim编辑器</title>
      <link href="2021/06/03/linux/Linux%E4%B8%8B%E5%AE%89%E8%A3%85vim%E7%BC%96%E8%BE%91%E5%99%A8/"/>
      <url>2021/06/03/linux/Linux%E4%B8%8B%E5%AE%89%E8%A3%85vim%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu 系统输入命令：sudo apt-get install vim-gtk</span><br><span class="line">centos 系统输入命令：yum -y install vim*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让某个元素排序第一</title>
      <link href="2021/06/03/sql/%E8%AE%A9%E6%9F%90%E4%B8%AA%E5%85%83%E7%B4%A0%E6%8E%92%E5%BA%8F%E7%AC%AC%E4%B8%80/"/>
      <url>2021/06/03/sql/%E8%AE%A9%E6%9F%90%E4%B8%AA%E5%85%83%E7%B4%A0%E6%8E%92%E5%BA%8F%E7%AC%AC%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select pid, name</span><br><span class="line">from t_province</span><br><span class="line">where 1 &#x3D; 1</span><br><span class="line">order by case when name &#x3D; &quot;广东&quot; then 0 else name end</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlite数据库创建使用</title>
      <link href="2021/06/03/jdbc/sqlite%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%BD%BF%E7%94%A8/"/>
      <url>2021/06/03/jdbc/sqlite%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> SQLiteDatabase db;</span><br><span class="line">db&#x3D;SQLiteDatabase.openOrCreateDatabase(getContext().getFilesDir().toString()+&quot;test.db&quot;,null);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主题报错</title>
      <link href="2021/06/03/androidbug/%E4%B8%BB%E9%A2%98%E6%8A%A5%E9%94%99/"/>
      <url>2021/06/03/androidbug/%E4%B8%BB%E9%A2%98%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.lang.IllegalStateException: You need to use a Theme.AppCompat theme (or descendant) with this activity.</span><br></pre></td></tr></table></figure><p>在创建的activity时，如果不用继承AppCompatActivity的话，就直接继承Activity。</p>]]></content>
      
      
      
        <tags>
            
            <tag> androidbug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模拟器乱码</title>
      <link href="2021/06/03/androidbug/%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%B9%B1%E7%A0%81/"/>
      <url>2021/06/03/androidbug/%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%B9%B1%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">即添加一句：compileOptions.encoding &#x3D; &quot;GBK&quot;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> androidbug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取网络数据时报错</title>
      <link href="2021/06/03/androidbug/%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E6%97%B6%E6%8A%A5%E9%94%99/"/>
      <url>2021/06/03/androidbug/%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E6%97%B6%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.io.IOException: Cleartext HTTP traf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:usesCleartextTraffic&#x3D;&quot;true&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> androidbug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多模块开发</title>
      <link href="2021/06/03/android/%E5%A4%9A%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91/"/>
      <url>2021/06/03/android/%E5%A4%9A%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>1.在主模块添加该依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">compile project(&#39;:testlibrary&#39;)      &#x2F;&#x2F;testlibraray是模块儿名称</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.在依赖模块修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: &#39;com.android.library&#39;     &#x2F;&#x2F;改成libraray</span><br></pre></td></tr></table></figure><p>3.注释掉依赖模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;   applicationId &quot;cn.itcast.frameanimation&quot;</span><br></pre></td></tr></table></figure><p>4.注册调用的activity</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;activity   android:name&#x3D;&quot;cn.itcast.tweenanimation.BJActivity&quot;</span><br><span class="line">    android:label&#x3D;&quot;@string&#x2F;app_name&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>5.布局名称不能相同</p><p>6.3.AndroidManifest.xml文件</p><ul><li><p>主module 在application上加上tools:replace=”android:name,allowBackup,icon,theme,label”</p></li><li><p>同时在顶端加上xmlns:tools=”<a href="http://schemas.android.com/tools&quot;%EF%BC%9B%E4%B8%BB%E8%A6%81%E6%98%AF%E9%81%BF%E5%85%8D%E5%A4%9Amodule%E7%9A%84name,icon,theme%E7%AD%89%E5%86%B2%E7%AA%81">http://schemas.android.com/tools&quot;；主要是避免多module的name,icon,theme等冲突</a></p></li><li><p>次module把application下的android:name，android:icon，android:label删除，否则安装后，在桌面上会有多个图标；</p></li><li><p>次module去掉activity的主过滤器</p></li></ul><pre><code>　&lt;intent-filter&gt;   　　　　 &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;  　　&lt;/intent-filter&gt;```</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读取Asset文件中的json数据</title>
      <link href="2021/06/03/android/%E8%AF%BB%E5%8F%96Asset%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84json%E6%95%B0%E6%8D%AE/"/>
      <url>2021/06/03/android/%E8%AF%BB%E5%8F%96Asset%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84json%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getJson</span><span class="params">(Context mContext, String fileName)</span> </span>&#123;  </span><br><span class="line">           <span class="comment">// TODO Auto-generated method stub  </span></span><br><span class="line">           StringBuilder sb = <span class="keyword">new</span> StringBuilder();  </span><br><span class="line">           AssetManager am = mContext.getAssets();  </span><br><span class="line">           <span class="keyword">try</span> &#123;  </span><br><span class="line">               BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(  </span><br><span class="line">                       am.open(fileName)));  </span><br><span class="line">               String next = <span class="string">&quot;&quot;</span>;  </span><br><span class="line">               <span class="keyword">while</span> (<span class="keyword">null</span> != (next = br.readLine())) &#123;  </span><br><span class="line">                   sb.append(next);  </span><br><span class="line">               &#125;  </span><br><span class="line">           &#125; <span class="keyword">catch</span> (IOException e) &#123;  </span><br><span class="line">               <span class="comment">// TODO Auto-generated catch block  </span></span><br><span class="line">               e.printStackTrace();  </span><br><span class="line">               sb.delete(<span class="number">0</span>, sb.length());  </span><br><span class="line">           &#125;  </span><br><span class="line">           <span class="keyword">return</span> sb.toString().trim();  </span><br><span class="line">       &#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fragment实现底栏思路</title>
      <link href="2021/06/03/android/fragment%E5%AE%9E%E7%8E%B0%E5%BA%95%E6%A0%8F%E6%80%9D%E8%B7%AF/"/>
      <url>2021/06/03/android/fragment%E5%AE%9E%E7%8E%B0%E5%BA%95%E6%A0%8F%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<ul><li><p>MVC设计模式</p><p>Model负责处理数据，并将处理好的数据交给Frament。Frament负责连接每个Frament布局以及控件，将收到的数据显示在控件上</p></li><li><p>navigation</p><p>navigation负责整合分开的fragment布局文件，并通过menu将每个frament布局与bottomNavigation结合在一起</p></li><li><p>NavigationUI</p><p> navigationUi将分散的fragment布局、以及底部按钮绑定到主页的主fragment中。AppBarConfiguration和NavController将会协助navigationUI分别对底部按钮和fragment布局进行绑定。</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>androidstudio导入项目</title>
      <link href="2021/05/01/androidstudio/androidstudio%E5%AF%BC%E5%85%A5%E9%A1%B9%E7%9B%AE/"/>
      <url>2021/05/01/androidstudio/androidstudio%E5%AF%BC%E5%85%A5%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h3><span id="导入androidstudio项目">导入androidstudio项目</span></h3><ul><li><p>复制app文件</p></li><li><p>在builder.gladle中修改sdk版本，target版本和compile版本得保持一致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">targetSdkVersion 28</span><br><span class="line">compileSdkVersion 28</span><br><span class="line">compile &#39;com.android.support:appcompat-v7:28.0.0&#39;</span><br></pre></td></tr></table></figure></li></ul><h3><span id="导入eclipse项目">导入eclipse项目</span></h3><ul><li>将eclipse项目以model形式导入</li><li>调整builder.gradle，将创建好的gradle中的复制过去即可。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> androidstudio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle下载速度慢解决方法</title>
      <link href="2021/03/16/androidstudio/Gradle%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E6%85%A2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>2021/03/16/androidstudio/Gradle%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E6%85%A2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>1.在软件里点开工程文件下的 build.gradle</p><p>2..在 buildscript 和 allprojects 的 repositories 中分别注释掉 jcenter()</p><p>3.在 buildscript 和 allprojects 的 repositories 分别添加：<code>maven&#123;url &#39;http://maven.aliyun.com/nexus/content/groups/public/&#39;&#125;</code></p><p>4.再在 buildscript 的 repositories 添加：<code>maven&#123;url &quot;https://jitpack.io&quot;&#125;</code></p><p>最终图片：</p><p><img src="https://img2018.cnblogs.com/blog/1577027/201901/1577027-20190111193149745-1197845339.png" alt="img"></p><p>实际效果证明：下载速度能对得起自己的网速了！</p><p>如果还是下载慢，建议换个上网的方式，比如手机开热点，还是不行，就用不同运营商的手机开热点，至于为什么，等真的还是慢时自己试试就知道了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> gradle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eval解析JSON中的注意点</title>
      <link href="2021/02/16/ajax/eval%E8%A7%A3%E6%9E%90JSON%E4%B8%AD%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9/"/>
      <url>2021/02/16/ajax/eval%E8%A7%A3%E6%9E%90JSON%E4%B8%AD%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>在JS中将JSON的字符串解析成JSON数据格式，一般有两种方式：</p><ol><li><p>一种为使用eval()函数。</p></li><li><p>使用Function对象来进行返回解析。</p></li></ol><p>使用eval函数来解析，并且使用jquery的each方法来遍历</p><p>用jquery解析JSON数据的方法,作为jquery异步请求的传输对象，jquery请求后返回的结果是json对象,这里考虑的都是服务器返回JSON形式的字符串的形式，对于利用JSONObject等插件封装的JSON对象，与此亦是大同小异，这里不再做说明。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ajax详解</title>
      <link href="2021/02/15/ajax/ajax%E8%AF%A6%E8%A7%A3/"/>
      <url>2021/02/15/ajax/ajax%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1><span id="1url">1.url</span></h1><p>要求为String类型的参数，（默认为当前页地址）发送请求的地址。</p><h1><span id="2type">2.type</span></h1><p>要求为String类型的参数，请求方式（post或get）默认为get。注意其他http请求方法，例如put和delete也可以使用，但仅部分浏览器支持。</p><h1><span id="3timeout">3.timeout</span></h1><p>要求为Number类型的参数，设置请求超时时间（毫秒）。此设置将覆盖$.ajaxSetup()方法的全局设置。</p><h1><span id="4async">4.async</span></h1><p>要求为Boolean类型的参数，默认设置为true，所有请求均为异步请求。如果需要发送同步请求，请将此选项设置为false。注意，同步请求将锁住浏览器，用户其他操作必须等待请求完成才可以执行。</p><h1><span id="5cache">5.cache</span></h1><p>要求为Boolean类型的参数，默认为true（当dataType为script时，默认为false），设置为false将不会从浏览器缓存中加载请求信息。</p><h1><span id="6date">6.date</span></h1><p>要求为Object或String类型的参数，发送到服务器的数据。如果已经不是字符串，将自动转换为字符串格式。get请求中将附加在url后。防止这种自动转换，可以查看　　processData选项。对象必须为key/value格式，例如{foo1:”bar1”,foo2:”bar2”}转换为&amp;foo1=bar1&amp;foo2=bar2。如果是数组，JQuery将自动为不同值对应同一个名称。例如{foo:[“bar1”,”bar2”]}转换为&amp;foo=bar1&amp;foo=bar2。</p><h1><span id="7datetype">7.datetype</span></h1><p>要求为String类型的参数，预期服务器返回的数据类型。如果不指定，JQuery将自动根据http包mime信息返回responseXML或responseText，并作为回调函数参数传递。可用的类型如下：<br>xml：返回XML文档，可用JQuery处理。<br>html：返回纯文本HTML信息；包含的script标签会在插入DOM时执行。<br>script：返回纯文本JavaScript代码。不会自动缓存结果。除非设置了cache参数。注意在远程请求时（不在同一个域下），所有post请求都将转为get请求。<br>json：返回JSON数据。<br>jsonp：JSONP格式。使用SONP形式调用函数时，例如myurl?callback=?，JQuery将自动替换后一个“?”为正确的函数名，以执行回调函数。<br>text：返回纯文本字符串。</p><h1><span id="8beforesend">8.beforeSend</span></h1><p>要求为Function类型的参数，发送请求前可以修改XMLHttpRequest对象的函数，例如添加自定义HTTP头。在beforeSend中如果返回false可以取消本次ajax请求。XMLHttpRequest对象是惟一的参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function(XMLHttpRequest)&#123;</span><br><span class="line">           this;   &#x2F;&#x2F;调用本次ajax请求时传递的options参数</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1><span id="9compelete">9.compelete</span></h1><p>要求为Function类型的参数，请求完成后调用的回调函数（请求成功或失败时均调用）。参数：XMLHttpRequest对象和一个描述成功请求类型的字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function(XMLHttpRequest, textStatus)&#123;</span><br><span class="line">         this;    &#x2F;&#x2F;调用本次ajax请求时传递的options参数</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h1><span id="10success">10.success</span></h1><p>要求为Function类型的参数，请求成功后调用的回调函数，有两个参数。<br>         (1)由服务器返回，并根据dataType参数进行处理后的数据。<br>         (2)描述状态的字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function(data, textStatus)&#123;</span><br><span class="line">       &#x2F;&#x2F;data可能是xmlDoc、jsonObj、html、text等等</span><br><span class="line">       this;  &#x2F;&#x2F;调用本次ajax请求时传递的options参数</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1><span id="11error">11.error</span></h1><p>要求为Function类型的参数，请求失败时被调用的函数。该函数有3个参数，即XMLHttpRequest对象、错误信息、捕获的错误对象(可选)。ajax事件函数如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function(XMLHttpRequest, textStatus, errorThrown)&#123;</span><br><span class="line">   &#x2F;&#x2F;通常情况下textStatus和errorThrown只有其中一个包含信息</span><br><span class="line">   this;   &#x2F;&#x2F;调用本次ajax请求时传递的options参数</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1><span id="12contenttype">12.contentType</span></h1><p>要求为String类型的参数，当发送信息至服务器时，内容编码类型默认为”application/x-www-form-urlencoded”。该默认值适合大多数应用场合。</p><h1><span id="13datefilter">13.dateFilter</span></h1><p>要求为Function类型的参数，给Ajax返回的原始数据进行预处理的函数。提供data和type两个参数。data是Ajax返回的原始数据，type是调用jQuery.ajax时提供的dataType参数。函数返回的值将由jQuery进一步处理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function(data, type)&#123;</span><br><span class="line">           &#x2F;&#x2F;返回处理后的数据</span><br><span class="line">           return data;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h1><span id="14datafilter">14.dataFilter</span></h1><p>要求为Function类型的参数，给Ajax返回的原始数据进行预处理的函数。提供data和type两个参数。data是Ajax返回的原始数据，type是调用jQuery.ajax时提供的dataType参数。函数返回的值将由jQuery进一步处理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function(data, type)&#123;</span><br><span class="line">    &#x2F;&#x2F;返回处理后的数据</span><br><span class="line">    return data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1><span id="15global">15.global</span></h1><p>要求为Boolean类型的参数，默认为true。表示是否触发全局ajax事件。设置为false将不会触发全局ajax事件，ajaxStart或ajaxStop可用于控制各种ajax事件。</p><h1><span id="16ifmodified">16.ifModified</span></h1><p>要求为Boolean类型的参数，默认为false。仅在服务器数据改变时获取新数据。服务器数据改变判断的依据是Last-Modified头信息。默认值是false，即忽略头信息。</p><h1><span id="17jsonp">17.jsonp</span></h1><p>要求为String类型的参数，在一个jsonp请求中重写回调函数的名字。该值用来替代在”callback=?”这种GET或POST请求中URL参数里的”callback”部分，例如{jsonp:’onJsonPLoad’}会导致将”onJsonPLoad=?”传给服务器。</p><h1><span id="18username">18.username</span></h1><p>要求为String类型的参数，用于响应HTTP访问认证请求的用户名。</p><h1><span id="19password">19.password</span></h1><p>要求为String类型的参数，用于响应HTTP访问认证请求的密码。</p><h1><span id="20processdata">20.processData</span></h1><p>要求为Boolean类型的参数，默认为true。默认情况下，发送的数据将被转换为对象（从技术角度来讲并非字符串）以配合默认内容类型”application/x-www-form-urlencoded”。如果要发送DOM树信息或者其他不希望转换的信息，请设置为false。<br>21.scriptCharset</p><p>要求为String类型的参数，只有当请求时dataType为”jsonp”或者”script”，并且type是GET时才会用于强制修改字符集(charset)。通常在本地和远程的内容编码不同时使用。</p><p>案例代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">function user() &#123;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:&quot;change.do&quot;,</span><br><span class="line">type:&quot;post&quot;,</span><br><span class="line">dateType:&quot;json&quot;,</span><br><span class="line">    success:function(data)&#123;</span><br><span class="line">    var dataObj&#x3D;eval(&quot;(&quot;+data+&quot;)&quot;);</span><br><span class="line">        $(&quot;#tb1&quot;).empty();</span><br><span class="line">    for(i&#x3D;0;i&lt;dataObj.length;i++)&#123;</span><br><span class="line">           var s&#x3D;dataObj[i];</span><br><span class="line">           $(&quot;#tb1&quot;).append(</span><br><span class="line">           &quot;&lt;tr&gt;&lt;td&gt;&quot;+s.name</span><br><span class="line">           +&quot;&lt;&#x2F;td&gt;&lt;td&gt;&quot;+s.pass</span><br><span class="line">           +&quot;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&quot;</span><br><span class="line">           );</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端使用cookie</title>
      <link href="2021/02/14/jquery/%E5%89%8D%E7%AB%AF%E4%BD%BF%E7%94%A8cookie/"/>
      <url>2021/02/14/jquery/%E5%89%8D%E7%AB%AF%E4%BD%BF%E7%94%A8cookie/</url>
      
        <content type="html"><![CDATA[<p>需要下载并引入jquery.cookie.js。<br>cookie有四个不同的属性: 名称，内容，域，路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$.cookie(&#39;the_cookie&#39;); &#x2F;&#x2F; 读取 cookie </span><br><span class="line">$.cookie(&#39;the_cookie&#39;, &#39;the_value&#39;); &#x2F;&#x2F; 存储 cookie </span><br><span class="line">$.cookie(&#39;the_cookie&#39;, &#39;the_value&#39;, &#123; expires: 7 &#125;); &#x2F;&#x2F; 存储一个带7天期限的 cookie </span><br><span class="line">$.cookie(&#39;the_cookie&#39;, &#39;&#39;, &#123; expires: -1 &#125;); &#x2F;&#x2F; 删除 cookie</span><br></pre></td></tr></table></figure><p>使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.cookie(&quot;currentMenuID&quot;);</span><br></pre></td></tr></table></figure><p>取值时会产生问题。<br>故：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.cookie(&quot;currentMenuID&quot;, &quot;menuID&quot;, &#123; path: &quot;&#x2F;&quot;&#125;); </span><br></pre></td></tr></table></figure><p>进行覆盖。同域下同一个cookieID对应一个值。</p>]]></content>
      
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js获取session中保存的对象值（jquery）</title>
      <link href="2021/02/13/jquery/js%E8%8E%B7%E5%8F%96session%E4%B8%AD%E4%BF%9D%E5%AD%98%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%80%BC%EF%BC%88jquery%EF%BC%89/"/>
      <url>2021/02/13/jquery/js%E8%8E%B7%E5%8F%96session%E4%B8%AD%E4%BF%9D%E5%AD%98%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%80%BC%EF%BC%88jquery%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>1.需要在js中获取到存储在session中的值，session中存储的可能是一个字符串也可能是一个对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">$(function()&#123;</span><br><span class="line">        &#x2F;&#x2F;session中存储的是一个对象user,内有属性name和password。</span><br><span class="line">var username &#x3D; &#39;$&#123;user.name&#125;&#39;;</span><br><span class="line">alert(username);</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>2.如果session中存储的是一个字符串，那么如下代码就可以获取到正确的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">$(function()&#123;</span><br><span class="line">        &#x2F;&#x2F;session中存储的是一个字符串username。</span><br><span class="line">var username &#x3D; &#39;$&#123;username&#125;&#39;;</span><br><span class="line">alert(username);</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JQuery中的$.load详解</title>
      <link href="2021/02/13/ajax/JQuery%E4%B8%AD%E7%9A%84$.load%E8%AF%A6%E8%A7%A3/"/>
      <url>2021/02/13/ajax/JQuery%E4%B8%AD%E7%9A%84$.load%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1><span id="load">load()</span></h1><h2><span id="1载入html文档">1.载入HTML文档</span></h2><p>load()方法是jQuery中最为简单和常用的Ajax方法，能载入远程HTML代码并插入DOM中。<br>它的结构为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load(url,data(可选),callback(可选))</span><br></pre></td></tr></table></figure><p>2.筛选载入的HTML文档<br>需要加载test.html页面中class为”para”的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#resText&quot;).load(&quot;test.html  .para&quot;);</span><br></pre></td></tr></table></figure><h2><span id="2传递方法">2.传递方法</span></h2><p>load()方法的传递方式根据参数data来自动指定。如果没有参数传递，则采用GET方式传递；反之，则会自动转换为POST方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;无参数传递，则是GET方式</span><br><span class="line">$(&#39;#resText&#39;).load(&#39;test.php&#39;,function()&#123;</span><br><span class="line">    &#x2F;&#x2F;...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;有参数传递，则是POST方式</span><br><span class="line">$(&#39;#resText&#39;).load(&#39;test.php&#39;,&#123;name:&#39;rain&#39;,age:&#39;22&#39;&#125;，function()&#123;</span><br><span class="line">    &#x2F;&#x2F;...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2><span id="4回调函数">4.回调函数</span></h2><p>对于必须在加载完成后才能继续的操作，load()方法提供了回调函数(callback)，该函数有3个参数，分别代表请求返回的内容、请求状态和XMLHttpRequest对象，jQuery代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#resText&quot;).load(&quot;test.html&quot;,function (responseText, textStatus, XMLHttpRequest)&#123;         </span><br><span class="line">        alert(responseText);         &#x2F;&#x2F;请求返回的内容</span><br><span class="line">        alert(textStatus);          &#x2F;&#x2F;请求状态：success，error</span><br><span class="line">        alert(XMLHttpRequest);     &#x2F;&#x2F;XMLHttpRequest对象</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在load()方法中，无论Ajax请求是否成功，只要当请求完成(complete)后，回调函数(callback)就被触发。</p><h2><span id="5传递多个参数">5.传递多个参数</span></h2><p>直接通过request分别获取即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&#39;#resText&#39;).load(&#39;test.php&#39;,&#123;name:&#39;rain&#39;,age:&#39;22&#39;&#125;</span><br></pre></td></tr></table></figure><h3><span id="load方法通常用来从web服务器上获取静态的数据文件然后这并不能体现ajax的全部价值-在项目中如果需要传递一些参数给服务器中的页面那么可以使用get或者post或者ajax方法">load()方法通常用来从Web服务器上获取静态的数据文件，然后这并不能体现Ajax的全部价值。在项目中，如果需要传递一些参数给服务器中的页面，那么可以使用$.get()或者$.post()或者$.ajax()方法。</span></h3>]]></content>
      
      
      
        <tags>
            
            <tag> jquery </tag>
            
            <tag> ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>session超时设置</title>
      <link href="2021/02/11/servlet/session%E8%B6%85%E6%97%B6%E8%AE%BE%E7%BD%AE/"/>
      <url>2021/02/11/servlet/session%E8%B6%85%E6%97%B6%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.setMaxInactiveInterval(10);</span><br></pre></td></tr></table></figure><p>如果不停刷新，也会使计数器不断地刷新，10秒后session还是会存在。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>细谈getRequestDispatcher与sendRedirect的区别</title>
      <link href="2021/02/11/servlet/%E7%BB%86%E8%B0%88getRequestDispatcher%E4%B8%8EsendRedirect%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>2021/02/11/servlet/%E7%BB%86%E8%B0%88getRequestDispatcher%E4%B8%8EsendRedirect%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>首先我们要知道：</p><p>(1)request.getRequestDispatcher()是请求转发，前后页面共享一个request ; 这个是在服务端运行的，对浏览器来说是透明的。<br>(2)response.sendRedirect()是重新定向，前后页面不是一个request。而这个是在浏览器端运行的。</p><h2><span id="redirect方式">redirect方式</span></h2><p>　 response.sendRedirect(“/a.jsp”);<br>　　  页面的路径是相对路径。sendRedirect可以将页面跳转到任何页面，不一定局限于本web应用中，如：<br>　　  response.sendRedirect(“URL”);<br>　　  跳转后浏览器地址栏变化。<br>　　  这种方式要传值出去的话，只能在url中带parameter或者放在session中，无法使用request.setAttribute来 传递。所以该方式只适用于无传值跳转</p><h2><span id="forward方式">forward方式</span></h2><p> request.getRequestDispatcher(“/路径（可以是jsp路径也可以是servlet）”) .forward(request, response);</p><p>如：</p><p>request.getRequestDispatcher(“/2.jsp）”) .forward(request, response);</p><p>request.getRequestDispatcher(“/servlet/HomeServlet）”) .forward(request, response);<br>　　Servlet页面跳转的路径是相对路径。forward方式只能跳转到本web应用中的页面上。<br>　　跳转后浏览器地址栏不会变化。<br>　　使用这种方式跳转，传值可以使用三种方法：url中带parameter，session，request.setAttribute</p>]]></content>
      
      
      
        <tags>
            
            <tag> servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uri和url</title>
      <link href="2021/02/11/servlet/uri%E5%92%8Curl/"/>
      <url>2021/02/11/servlet/uri%E5%92%8Curl/</url>
      
        <content type="html"><![CDATA[<ul><li>URI是什么？有什么用？<br>URI（统一资源标识符）是标识逻辑或物理资源的字符序列，与URL类似，也是一串字符。通过使用位置，名称或两者来标识Internet上的资源；它允许统一识别资源。</li></ul><p>有两种类型的URI，统一资源标识符（URL）和统一资源名称（URN）</p><ul><li>URL是什么？有什么用？<br>URL（统一资源定位符）是Internet上资源的地址，可以定义为引用地址的字符串，用于指示资源的位置以及用于访问它的协议</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql_bug</title>
      <link href="2021/02/11/sqlbug/where-clause/"/>
      <url>2021/02/11/sqlbug/where-clause/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unknown column &#39;name&#39; in &#39;where clause&#39;</span><br></pre></td></tr></table></figure><p>有可能是url中的仓库名称写错了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> sqlbug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql的ResultSet结果集为空判断</title>
      <link href="2021/02/11/jdbc/mysql%E7%9A%84ResultSet%E7%BB%93%E6%9E%9C%E9%9B%86%E4%B8%BA%E7%A9%BA%E5%88%A4%E6%96%AD/"/>
      <url>2021/02/11/jdbc/mysql%E7%9A%84ResultSet%E7%BB%93%E6%9E%9C%E9%9B%86%E4%B8%BA%E7%A9%BA%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(rs.next()) &#123;</span><br><span class="line">erroString&#x3D;&quot;该用户名已被注册&quot;;</span><br><span class="line">&#125;else &#123;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>excute和excuteQuery的区别</title>
      <link href="2021/02/11/jdbc/mysql%E7%9A%84excute%E5%92%8CexcuteQuery%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>2021/02/11/jdbc/mysql%E7%9A%84excute%E5%92%8CexcuteQuery%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>excute方法是直接执行，excuteQuery方法会返回结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">第一次需要用connection嵌入sql代码，其余的直接写在excute和excuteQuery里面，不写直接调用代码就是执行前一个sql语句</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>servlet编程模型</title>
      <link href="2021/02/11/servlet/servlet%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%9E%8B/"/>
      <url>2021/02/11/servlet/servlet%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1><span id="基本形式">基本形式</span></h1><p>1.初始化页面之前，如果需要对某些数据进行判断再初始化，则需要通过一个单独.do服务器模块进行一些数据的配置判断再 <strong>过渡</strong> 到新的页面</p><p>2.在同一个页面，仅对页面的部分内容进行改变时（仅做前后端数据交流）</p><ul><li><p>如果需要再整个页面不变化，只需要变化其中某一些元素且不涉及到页面跳转的内容，则通过ajax直接对元素内的元素进行切换。</p></li><li><p>数据库的改动（不需要从后端接收数据时）<br>仅需要通过一个链接后面接上相应的参数直接连接到.do模块对数据库进行改动，再重新加载会原来的页面即可。</p></li></ul><p>3.如果一个.do模块既可能仅仅对页面的部分内容进行改变，也有可能通过这个.do模块直接转载到另一个页面。则需要通过提交数据submit的方式或者是链接的方式加载到后端相应的模块。如果需要返回数据给原来的页面，通过设置request的方式返回jsp页面即可。</p><h1><span id="数据传输">数据传输</span></h1><ul><li>session<br>session数据会在规定的时间内适用于所有的页面，适合存放身份验证等信息。</li><li>request<br>一次请求的数据传输，仅需要后端到前端初始化时，通过request.setAttribute存放数据进行传输（请求完其实就释放了）</li><li>ajax_json/out.println<br>如果页面中的某个元素内部的数据发生结构和数据变化时，用ajax方法直接加载该模块儿的数据</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jstl_bug</title>
      <link href="2021/01/23/jstl_bug/jstl-bug/"/>
      <url>2021/01/23/jstl_bug/jstl-bug/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.jasper.JasperException: &#x2F;index.jsp (行.: [18], 列: [0]) 根据标记文件中的TLD或attribute指令，attribute[items]不接受任何表达式</span><br></pre></td></tr></table></figure><p>尝试使用前缀&lt;%@ taglib prefix=”c” uri=”<a href="http://java.sun.com/jstl/core_rt&quot;">http://java.sun.com/jstl/core_rt&quot;</a> %&gt;代替<br>&lt;%@ taglib prefix=”c” uri=”<a href="http://java.sun.com/jstl/core&quot;">http://java.sun.com/jstl/core&quot;</a> %&gt;</p>]]></content>
      
      
      
        <tags>
            
            <tag> jstl_bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主键ID的重排序</title>
      <link href="2021/01/13/sql/%E4%B8%BB%E9%94%AEID%E7%9A%84%E9%87%8D%E6%8E%92%E5%BA%8F/"/>
      <url>2021/01/13/sql/%E4%B8%BB%E9%94%AEID%E7%9A%84%E9%87%8D%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2><span id="删除元素后id自动减少">删除元素后id自动减少</span></h2><p>先删除再建立自增长的主键ID</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table student drop id;</span><br><span class="line">alter table student add id int primary key auto_increment;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>servle后端中的弹窗</title>
      <link href="2021/01/13/servlet/servle%E5%90%8E%E7%AB%AF%E4%B8%AD%E7%9A%84%E5%BC%B9%E7%AA%97/"/>
      <url>2021/01/13/servlet/servle%E5%90%8E%E7%AB%AF%E4%B8%AD%E7%9A%84%E5%BC%B9%E7%AA%97/</url>
      
        <content type="html"><![CDATA[<p>\“\“之间按照正常的字符串格式写即可,这是转义字符，里面还包含多个””时，就得用这种方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\&quot;return confirm(&#39;是否确定删除&quot;+rs.getString(&quot;name&quot;)+&quot;&#39;);\&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java模拟浏览器发送请求</title>
      <link href="2021/01/03/%E7%88%AC%E8%99%AB/java%E6%A8%A1%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/"/>
      <url>2021/01/03/%E7%88%AC%E8%99%AB/java%E6%A8%A1%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">URL url&#x3D;new URL(&quot;https:&#x2F;&#x2F;www.bilibili.com&#x2F;&quot;);</span><br><span class="line"></span><br><span class="line">HttpsURLConnection conn&#x3D;(HttpsURLConnection)url.openConnection();</span><br><span class="line">      conn.setRequestMethod(&quot;GET&quot;);</span><br><span class="line">      conn.setRequestProperty(&quot;User-Agent&quot;, &quot;Mozilla&#x2F;5.0(Windows NT 10.0;Win64;x64)AppleWebKit&#x2F;537.3&quot;);</span><br><span class="line">      BufferedReader br&#x3D;new BufferedReader(new InputStreamReader(conn.getInputStream(),&quot;UTF-8&quot;));</span><br><span class="line">      String msg&#x3D;null;</span><br><span class="line">      while(null!&#x3D;(msg&#x3D;br.readLine())) &#123;</span><br><span class="line">      System.out.println(msg);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql数据库工具类</title>
      <link href="2021/01/03/jdbc/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
      <url>2021/01/03/jdbc/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<pre><code>public class DBUtil &#123;    static final String JDBC_DRIVER =&quot;com.mysql.jdbc.Driver&quot;;    static final String DB_URL =&quot;jdbc:mysql://localhost:3306/student?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf-8&quot;;    static final String USER = &quot;root&quot;;    static final String PASS = &quot;1210&quot;;    private static Connection conn =null;    static &#123;        try &#123;            Class.forName(JDBC_DRIVER);            conn=DriverManager.getConnection(DB_URL, USER, PASS);        &#125; catch (ClassNotFoundException e) &#123;            // TODO Auto-generated catch block            e.printStackTrace();        &#125; catch (SQLException e) &#123;            // TODO Auto-generated catch block            e.printStackTrace();        &#125;    &#125;    public static Connection getConnection() &#123;        return conn;    &#125;&#125;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>httpServlet初始编码配置</title>
      <link href="2021/01/03/servlet/httpServlet%E5%88%9D%E5%A7%8B%E7%BC%96%E7%A0%81%E9%85%8D%E7%BD%AE/"/>
      <url>2021/01/03/servlet/httpServlet%E5%88%9D%E5%A7%8B%E7%BC%96%E7%A0%81%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">response.setContentType(&quot;text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql在Eclipes中向web中的引入</title>
      <link href="2021/01/03/jdbc/mysql%E5%9C%A8Eclipes%E4%B8%AD%E5%90%91web%E4%B8%AD%E7%9A%84%E5%BC%95%E5%85%A5/"/>
      <url>2021/01/03/jdbc/mysql%E5%9C%A8Eclipes%E4%B8%AD%E5%90%91web%E4%B8%AD%E7%9A%84%E5%BC%95%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1><span id="mysql-connector-java在web中的引入">mysql-connector-java在WEB中的引入</span></h1><p>在java项目中，只需要引入mysql-connector-java-5.1.7-bin.jar就可以运行java项目。</p><p>在web项目中，当Class.forName(“om.mysql.jdbc.Driver”);时myeclipse是不会去查找字符串，不会去查找驱动的。所以只需要把mysql-connector-java-5.1.7-bin.jar拷贝到tomcat下lib目录就可以了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.lang.ClassNotFoundException: com.mysql.jdbc.Driver</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SERVLET中的web.xml配置</title>
      <link href="2021/01/03/servlet/servlet%E4%B8%AD%E7%9A%84web-xml%E9%85%8D%E7%BD%AE/"/>
      <url>2021/01/03/servlet/servlet%E4%B8%AD%E7%9A%84web-xml%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1><span id="url-pattern">url-pattern</span></h1><h2><span id="理解">理解</span></h2><p>在写url-pattern的时候不需要加后缀,该名称为响应名称，只需要与表单的action一致即可。 也就是说我们只需要把表单响应页面与后端绑定起来即可，初始页面只要在对的路径，能够在服务器上打开即可。<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &lt;servlet-mapping&gt;</span><br><span class="line">  &lt;servlet-name&gt;InputDemo&lt;&#x2F;servlet-name&gt;</span><br><span class="line">  &lt;url-pattern&gt;&#x2F;input&lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure></p><h2><span id="匹配">匹配</span></h2><p>  写url-pattern时不能用/*，因为这样会把我们的html静态页面也全部包含其中，导致无法加载html页面，而是把任何页面都当作响应页面处理，所以最好的办法是用一个后缀来区分<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;url-pattern&gt;*.do&lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;register.do&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class="line"> String action&#x3D;uri.substring(uri.lastIndexOf(&quot;&#x2F;&quot;)+1,uri.lastIndexOf(&quot;.&quot;));</span><br><span class="line">if(action.equals(&quot;register&quot;)) &#123;</span><br></pre></td></tr></table></figure></p><ul><li>如果写成”/*.do”会报错。</li><li>别忘了lastIndexOf(“/“)后面还有+1</li></ul><h1><span id="welcome-file">welcome-file</span></h1><p>对于初始页面，我们只需要配置<welcome-file>即可，也就是刚启动servlet就能看到的页面</welcome-file></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  &lt;welcome-file-list&gt;</span><br><span class="line">&lt;welcome-file&gt;input.html&lt;&#x2F;welcome-file&gt;</span><br><span class="line">  &lt;&#x2F;welcome-file-list&gt;</span><br></pre></td></tr></table></figure><br>]]></content>
      
      
      <categories>
          
          <category> servlet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo同时关联gitee和github</title>
      <link href="2020/11/29/hexo/hexo%E5%90%8C%E6%97%B6%E5%85%B3%E8%81%94gitee%E5%92%8Cgithub/"/>
      <url>2020/11/29/hexo/hexo%E5%90%8C%E6%97%B6%E5%85%B3%E8%81%94gitee%E5%92%8Cgithub/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repo: </span><br><span class="line">       gitee: https:&#x2F;&#x2F;gitee.com&#x2F;akram98&#x2F;myblog.git</span><br><span class="line">       github: git@github.com:mark9812&#x2F;mark.github.io.git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh自定义产生密钥</title>
      <link href="2020/11/29/ssh/ssh%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%A7%E7%94%9F%E5%AF%86%E9%92%A5/"/>
      <url>2020/11/29/ssh/ssh%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%A7%E7%94%9F%E5%AF%86%E9%92%A5/</url>
      
        <content type="html"><![CDATA[<p>产生gitbub和gitbub.pub密钥文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;YOUR_EMAIL@YOUREMAIL.COM&quot; -f &#x2F;c&#x2F;user&#x2F;justdoit&#x2F;.ssh&#x2F;github</span><br></pre></td></tr></table></figure><p>“-c”必须大写，不然无法识别</p>]]></content>
      
      
      <categories>
          
          <category> ssh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在hoxe中使用markdown</title>
      <link href="2020/11/27/hexo/%E5%9C%A8hoxe%E4%B8%AD%E4%BD%BF%E7%94%A8markdown/"/>
      <url>2020/11/27/hexo/%E5%9C%A8hoxe%E4%B8%AD%E4%BD%BF%E7%94%A8markdown/</url>
      
        <content type="html"><![CDATA[<h1><span id="目录">目录</span></h1><!-- toc --><ul><li><a href="#toc%E7%9A%84%E4%BD%BF%E7%94%A8">toc的使用</a></li><li><a href="#%E4%BD%BF%E6%96%87%E5%AD%97%E7%B2%97%E4%BD%93%E6%88%96%E6%96%9C%E4%BD%93">使文字粗体或斜体</a></li><li><a href="#%E6%96%87%E6%9C%AC%E5%AF%B9%E9%BD%90">文本对齐</a></li><li><a href="#%E6%96%87%E6%9C%AC%E6%8A%98%E5%8F%A0">文本折叠</a></li></ul><!-- tocstop --><hr><a id="more"></a><h2><span id="toc的使用">toc的使用</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- toc --&gt;</span><br></pre></td></tr></table></figure><h2><span id="使文字粗体或斜体">使文字粗体或斜体</span></h2><p>使用粗体或斜体时，要保证两端的” _ “或者” * “离两边的文字之间有一个空格 </p><h2><span id="文本对齐">文本对齐</span></h2><p>在一个模块儿中间 <strong>空行</strong> 可能会导致上下文不对齐</p><h2><span id="文本折叠">文本折叠</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo个性化设置</title>
      <link href="2020/11/27/hexo/hexo%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/"/>
      <url>2020/11/27/hexo/hexo%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1><span id="目录">目录</span></h1><!-- toc --><ul><li><a href="#%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98">更换主题</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E7%AB%99%E7%82%B9%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF">配置站点基本信息</a></li><li><a href="#%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF%E8%AE%BE%E7%BD%AE">动态背景设置</a></li><li><a href="#%E5%A2%9E%E5%88%A0%E4%BE%A7%E6%A0%8F%E6%9D%A1%E7%9B%AE">增删侧栏条目</a></li><li><a href="#%E8%AE%BE%E7%BD%AEtoc%E7%9B%AE%E5%BD%95">设置toc目录</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD">设置搜索功能</a></li><li><a href="#%E5%BA%95%E9%83%A8%E9%9A%90%E8%97%8F%E7%94%B1hexo%E5%BC%BA%E5%8A%9B%E9%A9%B1%E5%8A%A8-%E4%B8%BB%E9%A2%98nextmist">底部隐藏由Hexo强力驱动、主题–NexT.Mist</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E7%BD%91%E7%AB%99%E5%9B%BE%E7%89%87-favicon">设置网站图片 Favicon</a></li><li><a href="#%E5%8D%9A%E5%AE%A2%E7%BD%AE%E9%A1%B6%E8%AE%BE%E7%BD%AE">博客置顶设置</a></li><li><a href="#%E6%96%87%E7%AB%A0%E4%BB%A3%E7%A0%81%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE">文章代码主题设置</a></li><li><a href="#%E7%BD%91%E7%AB%99%E5%BA%95%E9%83%A8%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E8%AE%BE%E7%BD%AE">网站底部字数统计设置</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E5%A4%B4%E5%83%8F">设置头像</a></li><li><a href="#%E8%AE%BE%E7%BD%AE%E5%A4%B4%E5%83%8F%E5%9C%86%E8%A7%92%E5%B9%B6%E6%97%8B%E8%BD%AC%E6%89%93%E5%BC%80">设置头像圆角并旋转打开</a></li><li><a href="#%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%88%97%E8%A1%A8">添加分类列表</a></li><li><a href="#%E5%90%8C%E4%B8%80%E4%B8%AA%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E5%A4%9A%E4%B8%AAtags">同一个文章添加多个tags</a></li><li><a href="#%E5%A4%96%E9%93%BE%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E8%AE%BE%E7%BD%AE">外链网易云音乐设置</a></li><li><a href="#%E7%9C%8B%E6%9D%BF%E5%A8%98%E8%AE%BE%E7%BD%AE">看板娘设置</a></li></ul><!-- tocstop --><hr><a id="more"></a><h2><span id="更换主题">更换主题</span></h2><ul><li><p>克隆主题仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure></li><li><p>配置站点_config.yum文件,修改theme为我们想要的主题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure></li><li><p>配置主题_config.yum文件。选择样式取掉前面的#号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure></li><li><p>hexo使用theme如果出现出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“ &#123;% extends ‘_layout.swig‘ %&#125; &#123;% import ‘_macro&#x2F;post.swig‘ as post_template %&#125;“</span><br></pre></td></tr></table></figure><p>原因是hexo在5.0之后把swig给删除了需要自己手动安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure><!-- more --><h2><span id="配置站点基本信息">配置站点基本信息</span></h2><p>在站点配置文件_config.yml修改基本的站点信息，依次是网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: Mark&#39;s Blog</span><br><span class="line">subtitle: I love to travel, but hate to arrive.</span><br><span class="line">description: </span><br><span class="line">keywords:</span><br><span class="line">author: Akram Amat</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone: </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="动态背景设置">动态背景设置</span></h2><p>Next主题自带有动态的背景效果，修改主题配置文件中的canvas_nest: false为canvas_nest: true即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: true</span><br><span class="line"></span><br><span class="line"># three_waves</span><br><span class="line">three_waves: false</span><br></pre></td></tr></table></figure><h2><span id="增删侧栏条目">增删侧栏条目</span></h2></li><li><p>创建菜单文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;你所要增加的菜单项名称（要和你在menu中的填写要匹配）&quot;</span><br></pre></td></tr></table></figure></li><li><p>编辑菜单文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2020-11-27 10:23:31</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure></li><li><p>修改主题配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">#home: &#x2F; || home</span><br><span class="line">#about: &#x2F;about&#x2F; || user</span><br><span class="line">tags: &#x2F;tags</span><br></pre></td></tr></table></figure><h2><span id="设置toc目录">设置toc目录</span></h2></li><li><p>安装toc插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-toc --save</span><br></pre></td></tr></table></figure></li><li><p>配置站点配置文件,在文件末尾添加。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">toc:</span><br><span class="line">  maxDepth: 4         &#x2F;&#x2F;深度</span><br><span class="line">  slugify: false     &#x2F;&#x2F;防止中文链接被转义无法跳转</span><br></pre></td></tr></table></figure></li><li><p>在markdown中使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- toc --&gt;</span><br></pre></td></tr></table></figure><h2><span id="设置搜索功能">设置搜索功能</span></h2></li><li><p>安装 hexo-generator-search</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>安装 hexo-generator-searchdb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在项目根目录下的 _config.yml 配置文件的文末添加下面这段代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>编辑主题文件夹的 _config.yml 配置文件，设置 Local searchenable 为 ture。重启服务即可！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2><span id="底部隐藏由hexo强力驱动-主题nextmist">底部隐藏由Hexo强力驱动、主题–NexT.Mist</span></h2></li><li><p>在主题文件夹下，打开 layout/_partials/footer.swig 文件，注释掉相关代码如下所示，位置是文末。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">&#123;% if theme.footer.powered %&#125;</span><br><span class="line">  &lt;div class&#x3D;&quot;powered-by&quot;&gt;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; __(&#39;footer.powered&#39;, &#39;&lt;a class&#x3D;&quot;theme-link&quot; target&#x3D;&quot;_blank&quot; href&#x3D;&quot;https:&#x2F;&#x2F;hexo.io&quot;&gt;Hexo&lt;&#x2F;a&gt;&#39;) &#125;&#125;&#123;#</span><br><span class="line">#&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125;</span><br><span class="line">  &lt;span class&#x3D;&quot;post-meta-divider&quot;&gt;|&lt;&#x2F;span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.footer.theme.enable %&#125;</span><br><span class="line">  &lt;div class&#x3D;&quot;theme-info&quot;&gt;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; __(&#39;footer.theme&#39;) &#125;&#125; &amp;mdash; &#123;#</span><br><span class="line">  #&#125;&lt;a class&#x3D;&quot;theme-link&quot; target&#x3D;&quot;_blank&quot; href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next&quot;&gt;&#123;#</span><br><span class="line">    #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;#</span><br><span class="line">  #&#125;&lt;&#x2F;a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;#</span><br><span class="line">#&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.footer.custom_text %&#125;</span><br><span class="line">  &lt;div class&#x3D;&quot;footer-custom&quot;&gt;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; theme.footer.custom_text &#125;&#125;&#123;#</span><br><span class="line">#&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><h2><span id="设置网站图片-favicon">设置网站图片 Favicon</span></h2></li><li><p>在 阿里巴巴矢量图标库 中找到自己的喜欢的图标，下载下来，覆盖掉主题文件夹下的 source/images 目录里面的三张图片即可。</p></li></ul><h2><span id="博客置顶设置">博客置顶设置</span></h2><ul><li>安装插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure></li><li>然后在需要置顶的文章的 Front-matter 中加上 top 即可，数值越大表示等级越高，越靠前显示。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: this is my first blog</span><br><span class="line">date: 2019-04-14</span><br><span class="line">top: 100</span><br></pre></td></tr></table></figure></li><li>在主题文件夹中打开 layout/_macro/post.swig 文件，定位到 post-header 标签下，把下面的代码添加进去即可。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">  &lt;i class&#x3D;&quot;fa fa-thumb-tack&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  &lt;font color&#x3D;7D26CD&gt;置顶&lt;&#x2F;font&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2><span id="文章代码主题设置">文章代码主题设置</span></h2></li><li>NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties。</li><li>在主题文件夹的 _config.yml 配置文件中，定位到 highlight_theme，根据需求修改相应的值即可。</li></ul><h2><span id="网站底部字数统计设置">网站底部字数统计设置</span></h2><ul><li>在项目根目录下安装 hexo 插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure></li><li>打开主题文件夹下的 layout/_partials/footer.swig 文件，在文末添加上下面这段代码。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;theme-info&quot;&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;powered-by&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;span class&#x3D;&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="设置头像">设置头像</span></h2></li><li>配置主题_config.yum文件,替换相应文件下的avatar.gif文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: &#x2F;images&#x2F;avatar.gif</span><br></pre></td></tr></table></figure></li></ul><h2><span id="设置头像圆角并旋转打开">设置头像圆角并旋转打开</span></h2><ul><li>打开主题文件夹的 source\css_common\components\sidebar 目录下的 sidebar-author.styl 文件，然后把下面的代码添加进去即可。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">  &#x2F;* 头像圆形 *&#x2F;</span><br><span class="line">  border-radius: 80px;</span><br><span class="line">  -webkit-border-radius: 80px;</span><br><span class="line">  -moz-border-radius: 80px;</span><br><span class="line">  box-shadow: inset 0 -1px 0 #333sf;</span><br><span class="line">  &#x2F;* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span><br><span class="line">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*&#x2F;</span><br><span class="line"> </span><br><span class="line">  &#x2F;* 鼠标经过头像旋转360度 *&#x2F;</span><br><span class="line">  -webkit-transition: -webkit-transform 1.0s ease-out;</span><br><span class="line">  -moz-transition: -moz-transform 1.0s ease-out;</span><br><span class="line">  transition: transform 1.0s ease-out;</span><br><span class="line">&#125;</span><br><span class="line">img:hover &#123;</span><br><span class="line">  &#x2F;* 鼠标经过停止头像旋转 </span><br><span class="line">  -webkit-animation-play-state:paused;</span><br><span class="line">  animation-play-state:paused;*&#x2F;</span><br><span class="line">  &#x2F;* 鼠标经过头像旋转360度 *&#x2F;</span><br><span class="line">  -webkit-transform: rotateZ(360deg);</span><br><span class="line">  -moz-transform: rotateZ(360deg);</span><br><span class="line">  transform: rotateZ(360deg);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* Z 轴旋转动画 *&#x2F;</span><br><span class="line">@-webkit-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -moz-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -moz-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="添加分类列表">添加分类列表</span></h2></li><li>在根目录新建categories page<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure></li><li>打开 categories 文件夹中的 index.md 文件，添加 type 字段，设置为 “categories”。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2020-11-27 23:44:12</span><br><span class="line">type: categories</span><br></pre></td></tr></table></figure></li><li>接着到主题文件夹下的 _config.yml 配置文件下，找到 menu 模块，把 categories 的注释给去掉。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  #home: &#x2F; || home</span><br><span class="line">  #about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags</span><br><span class="line">  categories: &#x2F;categories</span><br></pre></td></tr></table></figure></li><li>可能会遇见的问题<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cannot get myblog&#x2F;categories&#x2F;20%</span><br></pre></td></tr></table></figure>原因：在配置主题_config.yum文件时，categories后面的部分格式有问题，只能有一个空格，格式是非常严谨的。</li></ul><h2><span id="同一个文章添加多个tags">同一个文章添加多个tags</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [hexo,markdown]</span><br></pre></td></tr></table></figure><h2><span id="外链网易云音乐设置">外链网易云音乐设置</span></h2><ul><li>打开网易云，登录自己的账号，选择自己喜欢的一首歌，然后点击“生成外链播放器”</li><li>根据自己的需求设置音乐的样式，然后把代码复制下来。</li><li>打开主题文件夹下的 layout/_macro/sidebar.swig 文件，自己找个合适的位置，把刚刚复制的代码放进去。我放的位置如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if site.tags.length &gt; 0 %&#125;</span><br><span class="line">            &#123;% set tagsPageQuery &#x3D; site.pages.find(&#123;type: &#39;tags&#39;&#125;, &#123;lean: true&#125;) %&#125;</span><br><span class="line">            &#123;% set hasTagsPage &#x3D; tagsPageQuery.length &gt; 0 %&#125;</span><br><span class="line">            &lt;div class&#x3D;&quot;site-state-item site-state-tags&quot;&gt;</span><br><span class="line">              &#123;% if hasTagsPage %&#125;&lt;a href&#x3D;&quot;&#123;&#123; url_for(tagsPageQuery[0].path) &#125;&#125;&quot;&gt;&#123;% endif %&#125;</span><br><span class="line">                &lt;span class&#x3D;&quot;site-state-item-count&quot;&gt;&#123;&#123; site.tags.length &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&#39;state.tags&#39;) &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">              &#123;% if hasTagsPage %&#125;&lt;&#x2F;a&gt;&#123;% endif %&#125;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;nav&gt;</span><br><span class="line">        &lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;330 height&#x3D;86 src&#x3D;&quot;&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;2&amp;id&#x3D;26418207&amp;auto&#x3D;1&amp;height&#x3D;66&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><h2><span id="看板娘设置">看板娘设置</span></h2></li><li>下载插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -save hexo-helper-live2d</span><br></pre></td></tr></table></figure></li><li>选择萌宠或看板娘<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru&#x2F;01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru&#x2F;02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>然后在站点配置文件中加入<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw&#x2F;</span><br><span class="line">  pluginJsPath: lib&#x2F;</span><br><span class="line">  pluginModelPath: assets&#x2F;</span><br><span class="line">  tagMode: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko  #选择哪种模型</span><br><span class="line">  display: #放置位置和大小</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: false #是否在手机端显示</span><br></pre></td></tr></table></figure></li><li>下载对应模型<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-wanko</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建hexo个人博客</title>
      <link href="2020/11/26/hexo/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2020/11/26/hexo/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1><span id="目录">目录</span></h1><!-- toc --><ul><li><a href="#%E9%80%9A%E8%BF%87%E5%AF%86%E9%92%A5%E9%93%BE%E6%8E%A5%E4%BB%93%E5%BA%93">通过密钥链接仓库</a></li><li><a href="#%E5%AE%89%E8%A3%85nodejs">安装node.js</a></li><li><a href="#%E6%9E%84%E5%BB%BAmyblog%E6%96%87%E4%BB%B6">构建myBlog文件</a><ul><li><a href="#%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9">创建文件夹</a></li><li><a href="#%E6%89%93%E5%BC%80powershell">打开PowerShell</a><ul><li><a href="#__%E5%8F%AF%E8%83%BD%E9%81%87%E8%A7%81%E9%97%AE%E9%A2%98__"><strong>可能遇见问题</strong></a></li></ul></li><li><a href="#%E6%B5%8B%E8%AF%95">测试</a><ul><li><a href="#__%E5%B8%B8%E7%94%A8%E7%9A%84hexo-%E5%91%BD%E4%BB%A4__"><strong>常用的Hexo 命令</strong></a></li></ul></li></ul></li><li><a href="#%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1">修改配置文件部署服务</a><ul><li><a href="#%E6%89%93%E5%BC%80blog%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E7%9A%84_configyum%E6%96%87%E4%BB%B6%E5%9C%A8%E6%9C%80%E5%90%8E%E4%BF%AE%E6%94%B9%E4%BB%A5%E4%B8%8B%E5%86%85%E5%AE%B9">打开blog文件夹中的_config.yum文件，在最后修改以下内容</a></li><li><a href="#%E5%AE%89%E8%A3%85git%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6">安装git部署插件</a></li><li><a href="#%E5%90%AF%E5%8A%A8%E7%A0%81%E4%BA%91%E7%9A%84pakage%E6%9C%8D%E5%8A%A1%E5%8A%A0%E8%BD%BD%E9%A1%B5%E9%9D%A2">启动码云的pakage服务，加载页面</a></li></ul></li><li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a></li></ul><!-- tocstop --><hr><a id="more"></a><h2><span id="通过密钥链接仓库">通过密钥链接仓库</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>生成的公钥在user/.ssh/id_rsa.pub文件中</p><h2><span id="安装nodejs">安装node.js</span></h2><p><a href="https://link.zhihu.com/?target=https://nodejs.org/en/download/">Download | Node.js</a><br> 安装完添加环境变量</p><h2><span id="构建myblog文件">构建myBlog文件</span></h2><h3><span id="创建文件夹">创建文件夹</span></h3><h3><span id="打开powershell">打开PowerShell</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><h4><span id="可能遇见问题"><strong>可能遇见问题</strong></span></h4><p>powershell中不能执行脚本，提示‘because running scripts is disabled on this system’<br><strong>原因</strong><br>powershell中默认的execution policy 是restricted，使用Get-ExecutionPolicy查看<br><strong>解决方法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure><h3><span id="测试">测试</span></h3><p>init之后会产生blog文件夹，进入blog文件夹中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new test_my_site</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>完成后，打开浏览器输入地址：localhost:4000</p><!-- more --><h4><span id="常用的hexo-命令"><strong>常用的Hexo 命令</strong></span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line">npm update hexo -g #升级</span><br><span class="line">hexo init #初始化博客</span><br><span class="line">命令简写</span><br><span class="line">hexo n &quot;我的博客&quot; &#x3D;&#x3D; hexo new &quot;我的博客&quot; #新建文章</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate #生成</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server #启动服务预览</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy #部署</span><br><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure><p>刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。</p><h2><span id="修改配置文件部署服务">修改配置文件部署服务</span></h2><h3><span id="打开blog文件夹中的_configyum文件在最后修改以下内容">打开blog文件夹中的_config.yum文件，在最后修改以下内容</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repo: https:&#x2F;&#x2F;gitee.com&#x2F;username&#x2F;myblog.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>再修改#URL标注下的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url: http:&#x2F;&#x2F;username.gitee.io&#x2F;myblog</span><br><span class="line">root: &#x2F;myblog</span><br></pre></td></tr></table></figure><p>如果不修改url和root内容，可能会导致部署到服务器后无法加载样式<br>(上述usrename代表gitee账号的名称)</p><h3><span id="安装git部署插件">安装git部署插件</span></h3>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装完成后，接连输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3><span id="启动码云的pakage服务加载页面">启动码云的pakage服务，加载页面</span></h3><ul><li>打开对应的仓库&gt;服务&gt;gitee Pakages&gt;启动</li><li>浏览器输入<a href="http://xxxx.gitee.io(xxx为gitee用户名)/">http://xxxx.gitee.io(xxx为gitee用户名)</a></li></ul><p>如果一切顺利将会看到你的博客上线！</p><h2><span id="注意事项">注意事项</span></h2><ul><li>配置文件的每个冒号都是英文形式，且每个冒号后面都要有一个空格。</li><li>每次删除某个发表的文章，或者对网页进行配置都要先运行hexo -clean，命令来清除缓存</li><li>每次hexo -d 部署文件后，都要手动在gitee pakege服务里手动更新一次。手动更新后直接访问博客可能会是上次的内容，别急，过段时间刷新即可。</li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
